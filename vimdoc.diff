diff --git a/runtime/doc/options.txt b/runtime/doc/options.txt
index 255b9d50f..6c60b5896 100644
--- a/runtime/doc/options.txt
+++ b/runtime/doc/options.txt
@@ -1,4 +1,4 @@
-*options.txt*	For Vim version 9.1.  Last change: 2025 Apr 27
+*options.txt*	For Vim version 9.1.  Last change: 2025 Apr 30
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -2085,7 +2085,7 @@ A jump table for the options with a short description can be found at |Q_op|.
 		|i_CTRL-X_CTRL-D|
 	]	tag completion
 	t	same as "]"
-	f{func}	call the function {func}. Multiple "f" flags may be specified.
+	f{func}	call the function {func}.  Multiple "f" flags may be specified.
 		Refer to |complete-functions| for details on how the function
 		is invoked and what it should return.  The value can be the
 		name of a function or a |Funcref|.  For |Funcref| values,
@@ -2128,9 +2128,9 @@ A jump table for the options with a short description can be found at |Q_op|.
 	An optional match limit can be specified for a completion source by
 	appending a caret ("^") followed by a {count} to the source flag.
 	For example: ".^9,w,u,t^5" limits matches from the current buffer
-	to 9 and from tags to 5. Other sources remain unlimited.
-	The match limit takes effect only during forward completion (CTRL-N)
-	and is ignored during backward completion (CTRL-P).
+	to 9 and from tags to 5.  Other sources remain unlimited.
+	Note: The match limit takes effect only during forward completion
+	(CTRL-N) and is ignored during backward completion (CTRL-P).
 
 						*'completefunc'* *'cfu'*
 'completefunc' 'cfu'	string	(default: empty)
@@ -3656,7 +3656,7 @@ A jump table for the options with a short description can be found at |Q_op|.
 	  lastline	'@'		'display' contains lastline/truncate
 	  trunc		'>'		truncated text in the
 					|ins-completion-menu|.
-	  truncrl	'<'		same as "trunc' in 'rightleft' mode
+	  truncrl	'<'		same as "trunc" in 'rightleft' mode
 
 	Any one that is omitted will fall back to the default.
 
@@ -4986,10 +4986,10 @@ A jump table for the options with a short description can be found at |Q_op|.
 						*'isexpand'* *'ise'*
 'isexpand' 'ise'	string	(default: "")
 			local to buffer
-	Defines characters and patterns for completion in insert mode. Used by
-	the |complete_match()| function to determine the starting position for
-	completion. This is a comma-separated list of triggers. Each trigger
-	can be:
+	Defines characters and patterns for completion in insert mode.  Used
+	by the |complete_match()| function to determine the starting position
+	for completion.  This is a comma-separated list of triggers.  Each
+	trigger can be:
 	- A single character like "." or "/"
 	- A sequence of characters like "->", "/*", or "/**"
 
@@ -8521,7 +8521,8 @@ A jump table for the options with a short description can be found at |Q_op|.
 			local to buffer
 			{not available when compiled without the |+eval|
 			feature}
-	This option specifies a function to be used to perform tag searches.
+	This option specifies a function to be used to perform tag searches
+	(including |taglist()|).
 	The function gets the tag pattern and should return a List of matching
 	tags.  See |tag-function| for an explanation of how to write the
 	function and an example.  The value can be the name of a function, a
@@ -9747,8 +9748,8 @@ A jump table for the options with a short description can be found at |Q_op|.
 <	First press: longest common substring
 	Second press: list all matches >
 		:set wildmode=noselect:full
-<	Show 'wildmenu' without completing or selecting on first press
-	Cycle full matches on second press >
+<	First press: show 'wildmenu' without completing or selecting
+	Second press: cycle full matches >
 		:set wildmode=noselect:lastused,full
 <	Same as above, but buffer matches are sorted by time last used
 	More info here: |cmdline-completion|.
diff --git a/runtime/doc/tagsrch.txt b/runtime/doc/tagsrch.txt
index 132414368..0717f2ffd 100644
--- a/runtime/doc/tagsrch.txt
+++ b/runtime/doc/tagsrch.txt
@@ -1,4 +1,4 @@
-*tagsrch.txt*   For Vim version 9.1.  Last change: 2025 Apr 26
+*tagsrch.txt*   For Vim version 9.1.  Last change: 2025 May 01
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -526,7 +526,7 @@ directory where the tag file is.
 ==============================================================================
 5. Tags file format				*tags-file-format* *E431*
 
-						*ctags* *jtags*
+						*ctags*
 A tags file can be created with an external command, for example "ctags".  It
 will contain a tag for each function.  Some versions of "ctags" will also make
 a tag for each "#defined" macro, typedefs, enums, etc.
@@ -542,13 +542,11 @@ exuberant ctags		This is a very good one.  It works for C, C++, Java,
 			many items.  See http://ctags.sourceforge.net.
 			No new version since 2009.
 etags			Connected to Emacs.  Supports many languages.
-JTags			For Java, in Java.  It can be found at
-			http://www.fleiner.com/jtags/.
+|:helptags|		For Vim's |help| files
 ptags.py		For Python, in Python.  Found in your Python source
 			directory at Tools/scripts/ptags.py.
-ptags			For Perl, in Perl.  It can be found at (link seems
-			dead):
-			http://www.eleves.ens.fr:8080/home/nthiery/Tags/.
+ptags			For Perl, in Perl.  It can be found at
+			https://metacpan.org/pod/Vim::Tag
 gnatxref		For Ada.  See http://www.gnuada.org/.  gnatxref is
 			part of the gnat package.
 
@@ -894,8 +892,8 @@ Common arguments for the commands above:
 7. Using 'tagfunc'						*tag-function*
 
 It is possible to provide Vim with a function which will generate a list of
-tags used for commands like |:tag|, |:tselect| and Normal mode tag commands
-like |CTRL-]|.
+tags used for commands like |:tag|, |:tselect|, Normal mode tag commands like
+|CTRL-]| and for the |taglist()| function.
 
 The function used for generating the taglist is specified by setting the
 'tagfunc' option.  The function will be called with three arguments:
@@ -950,15 +948,14 @@ It is not allowed to close a window or change window from inside 'tagfunc'.
 The following is a hypothetical example of a function used for 'tagfunc'.  It
 uses the output of |taglist()| to generate the result: a list of tags in the
 inverse order of file names.
->
-	function TagFunc(pattern, flags, info)
-	  function CompareFilenames(item1, item2)
-	    let f1 = a:item1['filename']
-	    let f2 = a:item2['filename']
-	    return f1 >=# f2 ?
-			\ -1 : f1 <=# f2 ? 1 : 0
-	  endfunction
+>vim
+	function CompareFilenames(item1, item2)
+	  let f1 = a:item1['filename']
+	  let f2 = a:item2['filename']
+	  return f1 >=# f2 ? -1 : f1 <=# f2 ? 1 : 0
+	endfunction
 
+	function TagFunc(pattern, flags, info)
 	  let result = taglist(a:pattern)
 	  call sort(result, "CompareFilenames")
 
@@ -966,5 +963,7 @@ inverse order of file names.
 	endfunc
 	set tagfunc=TagFunc
 <
+Note: When executing |taglist()| the 'tagfunc' function won't be called
+recursively.
 
  vim:tw=78:ts=8:noet:ft=help:norl:
diff --git a/runtime/doc/windows.txt b/runtime/doc/windows.txt
index db24e5191..545a44b3b 100644
--- a/runtime/doc/windows.txt
+++ b/runtime/doc/windows.txt
@@ -1,4 +1,4 @@
-*windows.txt*   For Vim version 9.1.  Last change: 2025 Jan 02
+*windows.txt*   For Vim version 9.1.  Last change: 2025 Apr 30
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -1289,7 +1289,9 @@ list of buffers. |unlisted-buffer|
 		name also works, so long as it is unique in the list of
 		buffers.
 		Note that a buffer whose name is a number cannot be referenced
-		by that name; use the buffer number instead.
+		by that name; use the buffer number instead.  Same is true if
+		the buffer name starts with a `+`, it will be interpreted as
+		the start of a |+cmd|.
 		Insert a backslash before a space in a buffer name.
 		See |:buffer-!| for [!].
 		This will also edit a buffer that is not in the buffer list,
