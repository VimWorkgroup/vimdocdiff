diff --git a/runtime/doc/builtin.txt b/runtime/doc/builtin.txt
index 80b8a9cc4..ec1088933 100644
--- a/runtime/doc/builtin.txt
+++ b/runtime/doc/builtin.txt
@@ -1,4 +1,4 @@
-*builtin.txt*	For Vim version 9.1.  Last change: 2025 Feb 23
+*builtin.txt*	For Vim version 9.1.  Last change: 2025 Mar 11
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -7587,9 +7587,8 @@ mkdir({name} [, {flags} [, {prot}]])			*mkdir()* *E739*
 		If {prot} is given it is used to set the protection bits of
 		the new directory.  The default is 0o755 (rwxr-xr-x: r/w for
 		the user, readable for others).  Use 0o700 to make it
-		unreadable for others.  This is only used for the last part of
-		{name}.  Thus if you create /tmp/foo/bar then /tmp/foo will be
-		created with 0o755.
+		unreadable for others.  This is used for the newly created
+		directories.  Note an umask is applied to {prot} (on Unix).
 		Example: >
 			:call mkdir($HOME .. "/tmp/foo/bar", "p", 0o700)
 
diff --git a/runtime/doc/filetype.txt b/runtime/doc/filetype.txt
index 39402ee24..8a7f0c538 100644
--- a/runtime/doc/filetype.txt
+++ b/runtime/doc/filetype.txt
@@ -1,4 +1,4 @@
-*filetype.txt*	For Vim version 9.1.  Last change: 2025 Mar 09
+*filetype.txt*	For Vim version 9.1.  Last change: 2025 Mar 10
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -776,7 +776,7 @@ Local mappings:
 	to the end of the file in Normal mode.  This means "> " is inserted in
 	each line.
 
-MAN					*ft-man-plugin* *:Man* *man.vim*
+MAN					*ft-man-plugin* *:Man* *:ManReload* *man.vim*
 
 This plugin displays a manual page in a nice way.  See |find-manpage| in the
 user manual for more information.
@@ -793,6 +793,8 @@ Commands:
 Man {name}	Display the manual page for {name} in a window.
 Man {number} {name}
 		Display the manual page for {name} in a section {number}.
+ManReload	Reload the cache of available man pages used for |:Man| argument
+		completion.
 
 Global mapping:
 <Leader>K	Displays the manual page for the word under the cursor.
@@ -823,6 +825,14 @@ desired folding style instead.  For example: >
 If you would like :Man {number} {name} to behave like man {number} {name} by
 not running man {name} if no page is found, then use this: >
 	let g:ft_man_no_sect_fallback = 1
+<
+						*g:ft_man_implementation*
+The completion for the :Man command tries to guess which implementation of man
+the system has. If it guesses wrong, you can set g:ft_man_implementation to
+one of these values:
+	'man-db'	https://man-db.nongnu.org/
+	''		Unknown, fall back to completing shell commands
+			instead of man pages.
 
 You may also want to set 'keywordprg' to make the |K| command open a manual
 page in a Vim window: >
diff --git a/runtime/doc/quickfix.txt b/runtime/doc/quickfix.txt
index 834f0e1b6..91e48637a 100644
--- a/runtime/doc/quickfix.txt
+++ b/runtime/doc/quickfix.txt
@@ -1,4 +1,4 @@
-*quickfix.txt*  For Vim version 9.1.  Last change: 2025 Jan 11
+*quickfix.txt*  For Vim version 9.1.  Last change: 2025 Mar 11
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -1722,6 +1722,13 @@ shells and OSes and also does not allow to use other available TeX options,
 if any.  If your TeX doesn't support "-interaction=nonstopmode", please
 report it with different means to express \nonstopmode from the command line.
 
+TSC COMPILER						*compiler-tsc*
+
+The executable and compiler options can be added to 'makeprg' by setting the
+b/g:tsc_makeprg variable.  For example: >
+
+	let b:tsc_makeprg = "npx tsc --noEmit"
+
 TYPST COMPILER						*compiler-typst*
 
 Vim includes a compiler plugin for Typst files. This compiler is enabled
diff --git a/runtime/doc/syntax.txt b/runtime/doc/syntax.txt
index c4d7afc5f..81153717d 100644
--- a/runtime/doc/syntax.txt
+++ b/runtime/doc/syntax.txt
@@ -1,4 +1,4 @@
-*syntax.txt*	For Vim version 9.1.  Last change: 2025 Feb 25
+*syntax.txt*	For Vim version 9.1.  Last change: 2025 Mar 10
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -4017,7 +4017,29 @@ highlighting is to put the following line in your |vimrc|: >
 
 	let g:vimsyn_noerror = 1
 <
+To suppress only specific errors, define the following variables: >
+
+   g:vimsyn_nobehaveerror = 1        " :behave error
+   g:vimsyn_vimFTError = 1           " :filetype error
+   g:vimsyn_noaugrouperror = 1       " :augroup error
+   g:vimsyn_noopererror = 1          " operator error
+   g:vimsyn_notypealiaserror = 1     " Vim9 type alias error
+   g:vimsyn_novimfunctionerror = 1   " Vim9 method error
+   g:vimsyn_nousercmderror = 1       " :com error
+   g:vimsyn_novimsynerror = 1        " :syn error
+   g:vimsyn_novimsyncaseerror = 1    " :syn case error
+   g:vimsyn_novimsynconcealerror = 1 " :syn conceal error
+   g:vimsyn_novimsynfoldlevelerror = 1 " :syn foldlevel error
+   g:vimsyn_novimsynspellerror = 1   " :syn spell error
+   g:vimsyn_novimsyncerror = 1       " :syn sync error
+   g:vimsyn_novimhictermerror = 1    " :hi error
+   g:vimsyn_vimhikeyerror = 1        " :hi key=arg error
+<
+To force highlighting of Neovim specific Vim script elements (even if not
+using Neovim), set >
 
+	let g:vimsyn_vim_features = ['nvim']
+<
 
 WDL							*wdl.vim* *wdl-syntax*
 
