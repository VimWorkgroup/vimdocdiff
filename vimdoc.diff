diff --git a/runtime/doc/options.txt b/runtime/doc/options.txt
index 57fefa223..655fd6c52 100644
--- a/runtime/doc/options.txt
+++ b/runtime/doc/options.txt
@@ -1,4 +1,4 @@
-*options.txt*	For Vim version 9.1.  Last change: 2024 Jun 04
+*options.txt*	For Vim version 9.1.  Last change: 2024 Jun 05
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -2101,7 +2101,7 @@ A jump table for the options with a short description can be found at |Q_op|.
 
 						*'completeopt'* *'cot'*
 'completeopt' 'cot'	string	(default: "menu,preview")
-			global
+			global or local to buffer |global-local|
 	A comma-separated list of options for Insert mode completion
 	|ins-completion|.  The supported values are:
 
diff --git a/runtime/doc/syntax.txt b/runtime/doc/syntax.txt
index 9161130a3..1bc556c46 100644
--- a/runtime/doc/syntax.txt
+++ b/runtime/doc/syntax.txt
@@ -1,4 +1,4 @@
-*syntax.txt*	For Vim version 9.1.  Last change: 2024 May 31
+*syntax.txt*	For Vim version 9.1.  Last change: 2024 Jun 05
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -3810,12 +3810,12 @@ embedded script highlighting they wish to have. >
    g:vimsyn_embed =~ 't' : support embedded tcl
 <
 By default, g:vimsyn_embed is a string supporting interpreters that your vim
-itself supports.  Concatenate multiple characters to support multiple types
-of embedded interpreters; ie. g:vimsyn_embed= "mp" supports embedded mzscheme
-and embedded perl.
+itself supports.  Concatenate the indicated characters to support multiple
+types of embedded interpreters; ie. g:vimsyn_embed = "mp" supports embedded
+mzscheme and embedded perl.
 						*g:vimsyn_folding*
 
-Some folding is now supported with syntax/vim.vim: >
+Some folding is now supported with when 'foldmethod' is set to "syntax": >
 
    g:vimsyn_folding == 0 or doesn't exist: no syntax-based folding
    g:vimsyn_folding =~ 'a' : augroups
@@ -3828,8 +3828,12 @@ Some folding is now supported with syntax/vim.vim: >
    g:vimsyn_folding =~ 'P' : fold python   script
    g:vimsyn_folding =~ 'r' : fold ruby     script
    g:vimsyn_folding =~ 't' : fold tcl      script
-let g:vimsyn_folding = 'acfhlmpPrt'
 <
+
+By default, g:vimsyn_folding is unset.  Concatenate the indicated characters
+to support folding of multiple syntax constructs; i.e.
+g:vimsyn_folding = "fh" will enable folding of both functions and heredocs.
+
 							*g:vimsyn_noerror*
 Not all error highlighting that syntax/vim.vim does may be correct; Vim script
 is a difficult language to highlight correctly.  A way to suppress error
diff --git a/runtime/doc/terminal.txt b/runtime/doc/terminal.txt
index c99b882cf..d7749ff26 100644
--- a/runtime/doc/terminal.txt
+++ b/runtime/doc/terminal.txt
@@ -1,4 +1,4 @@
-*terminal.txt*	For Vim version 9.1.  Last change: 2024 Mar 17
+*terminal.txt*	For Vim version 9.1.  Last change: 2024 Jun 05
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -1332,8 +1332,8 @@ Put focus on the gdb window to type commands there.  Some common ones are:
 						*:Run* *:Arguments*
 In the window showing the source code these commands can be used to control
 gdb:
- `:Run` [args]	    run the program with [args] or the previous arguments
- `:Arguments` {args}  set arguments for the next `:Run`
+ :Run [args]	    run the program with [args] or the previous arguments
+ :Arguments {args}  set arguments for the next `:Run`
 
  *:Break*	set a breakpoint at the cursor position
  :Break {position}
@@ -1379,10 +1379,10 @@ breakpoint, or use the "Clear breakpoint" right-click menu entry.
 
 Inspecting variables ~
 					*termdebug-variables* *:Evaluate*
- `:Evaluate`	    evaluate the expression under the cursor
- `K`		    same (see |termdebug_map_K| to disable)
- `:Evaluate` {expr}   evaluate {expr}
- `:'<,'>Evaluate`     evaluate the Visually selected text
+ :Evaluate	    evaluate the expression under the cursor
+ K		    same (see |termdebug_map_K| to disable)
+ :Evaluate {expr}   evaluate {expr}
+ :'<,'>Evaluate     evaluate the Visually selected text
 
 This is similar to using "print" in the gdb window.
 You can usually shorten `:Evaluate` to `:Ev`.
@@ -1390,14 +1390,14 @@ You can usually shorten `:Evaluate` to `:Ev`.
 
 Navigating stack frames ~
 				*termdebug-frames* *:Frame* *:Up* *:Down*
- `:Frame` [frame]	select frame [frame], which is a frame number,
+ :Frame [frame]	select frame [frame], which is a frame number,
 			address, or function name (default: current frame)
- `:Up` [count]		go up [count] frames (default: 1; the frame that
+ :Up [count]		go up [count] frames (default: 1; the frame that
 			called the current)
- `+`			same (see |termdebug_map_plus| to disable)
- `:Down` [count]	go down [count] frames (default: 1; the frame called
+ +			same (see |termdebug_map_plus| to disable)
+ :Down [count]	go down [count] frames (default: 1; the frame called
 			by the current)
- `-`			same (see |termdebug_map_minus| to disable)
+ -			same (see |termdebug_map_minus| to disable)
 
 
 Other commands ~
diff --git a/runtime/doc/version9.txt b/runtime/doc/version9.txt
index 07c416ae2..6edb8891b 100644
--- a/runtime/doc/version9.txt
+++ b/runtime/doc/version9.txt
@@ -1,4 +1,4 @@
-*version9.txt*  For Vim version 9.1.  Last change: 2024 Jun 03
+*version9.txt*  For Vim version 9.1.  Last change: 2024 Jun 05
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -41567,6 +41567,7 @@ Changed~
 - use 'smoothscroll' logic for CTRL-D and CTRL-U for half-pagewise scrolling
 - the default for 'commentstring' contains whitespace padding to have
   automatic comments look nicer |comment-install|
+- 'completeopt' is now a |global-local| option.
 
 							*added-9.2*
 Added ~
