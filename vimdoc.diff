diff --git a/runtime/doc/builtin.txt b/runtime/doc/builtin.txt
index b117bf84b..849b1808f 100644
--- a/runtime/doc/builtin.txt
+++ b/runtime/doc/builtin.txt
@@ -1,4 +1,4 @@
-*builtin.txt*	For Vim version 9.1.  Last change: 2024 Feb 22
+*builtin.txt*	For Vim version 9.1.  Last change: 2024 Feb 24
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -6090,6 +6090,7 @@ match({expr}, {pat} [, {start} [, {count}]])			*match()*
 		Note that when {count} is added the way {start} works changes,
 		see above.
 
+						*match-pattern*
 		See |pattern| for the patterns that are accepted.
 		The 'ignorecase' option is used to set the ignore-caseness of
 		the pattern.  'smartcase' is NOT used.  The matching is always
@@ -6237,6 +6238,9 @@ matchbufline({buf}, {pat}, {lnum}, {end}, [, {dict}])
 		This function works only for loaded buffers. First call
 		|bufload()| if needed.
 
+		See |match-pattern| for information about the effect of some
+		option settings on the pattern.
+
 		When {buf} is not a valid buffer, the buffer is not loaded or
 		{lnum} or {end} is not valid then an error is given and an
 		empty |List| is returned.
@@ -6411,6 +6415,9 @@ matchstrlist({list}, {pat} [, {dict}])
 		    submatches	a List of submatches.  Present only if
 				"submatches" is set to v:true in {dict}.
 
+		See |match-pattern| for information about the effect of some
+		option settings on the pattern.
+
 		Example: >
 		    :echo matchstrlist(['tik tok'], '\<\k\+\>')
 		    [{'idx': 0, 'byteidx': 0, 'text': 'tik'}, {'idx': 0, 'byteidx': 4, 'text': 'tok'}]
diff --git a/runtime/doc/options.txt b/runtime/doc/options.txt
index 78cac3f33..48e45e835 100644
--- a/runtime/doc/options.txt
+++ b/runtime/doc/options.txt
@@ -1,4 +1,4 @@
-*options.txt*	For Vim version 9.1.  Last change: 2024 Jan 30
+*options.txt*	For Vim version 9.1.  Last change: 2024 Feb 24
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -365,11 +365,24 @@ created, thus they behave slightly differently:
 			For a global option the global value is
 			shown (but that might change in the future).
 
-:setl[ocal] {option}<	Set the local value of {option} to its global value by
-			copying the value.
-
-:se[t] {option}<	For |global-local| options: Remove the local value of
-			{option}, so that the global value will be used.
+:se[t] {option}<	Set the effective value of {option} to its global
+                        value.
+			For string |global-local| options, the local value is
+			removed, so that the global value will be used.
+			For all other options, the global value is copied to
+			the local value.
+
+:setl[ocal] {option}<	Set the effective value of {option} to its global
+                        value.
+			For number and boolean |global-local| options, the
+			local value is removed, so that the global value will
+			be used.
+			For all other options, including string |global-local|
+			options, the global value is copied to the local
+			value.
+
+Note that the behaviour for |global-local| options is slightly different
+between string and number-based options.
 
 							*:setg* *:setglobal*
 :setg[lobal][!] ...	Like ":set" but set only the global value for a local
@@ -4000,7 +4013,7 @@ A jump table for the options with a short description can be found at |Q_op|.
 						*'guiligatures'* *'gli'* *E1243*
 'guiligatures' 'gli'	string	(default "")
 			global
-			{only for GTK GUI}
+			{only for GTK and Win32 GUI}
 	List of ASCII characters that, when combined together, can create more
 	complex shapes. Each character must be a printable ASCII character
 	with a value in the 32-127 range.
