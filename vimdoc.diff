diff --git a/runtime/doc/builtin.txt b/runtime/doc/builtin.txt
index bf0ae8564..98fd13840 100644
--- a/runtime/doc/builtin.txt
+++ b/runtime/doc/builtin.txt
@@ -1,4 +1,4 @@
-*builtin.txt*	For Vim version 9.0.  Last change: 2022 Oct 14
+*builtin.txt*	For Vim version 9.0.  Last change: 2022 Oct 21
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -1583,11 +1583,9 @@ col({expr})	The result is a Number, which is the byte index of the column
 		buffer.
 		For the cursor position, when 'virtualedit' is active, the
 		column is one higher if the cursor is after the end of the
-		line.  This can be used to obtain the column in Insert mode: >
-			:imap <F2> <C-O>:let save_ve = &ve<CR>
-				\<C-O>:set ve=all<CR>
-				\<C-O>:echo col(".") .. "\n" <Bar>
-				\let &ve = save_ve<CR>
+		line.  Also, when using a <Cmd> mapping the cursor isn't
+		moved, this can be used to obtain the column in Insert mode: >
+			:imap <F2> <Cmd>echo col(".")<CR>
 
 <		Can also be used as a |method|: >
 			GetPos()->col()
diff --git a/runtime/doc/ft_rust.txt b/runtime/doc/ft_rust.txt
index d5f4080aa..7fe7b7c4a 100644
--- a/runtime/doc/ft_rust.txt
+++ b/runtime/doc/ft_rust.txt
@@ -1,70 +1,70 @@
-*ft_rust.txt*	For Vim version 9.0.  Last change: 2017 Nov 02
+*ft_rust.txt*	For Vim version 9.0.  Last change: 2022 Oct 17
 
 This is documentation for the Rust filetype plugin.
 
 ==============================================================================
-CONTENTS                                                      *rust*
+CONTENTS						      *rust*
 
-1. Introduction                                                   |rust-intro|
-2. Settings                                                    |rust-settings|
-3. Commands                                                    |rust-commands|
-4. Mappings                                                    |rust-mappings|
+1. Introduction							  |rust-intro|
+2. Settings						       |rust-settings|
+3. Commands						       |rust-commands|
+4. Mappings						       |rust-mappings|
 
 ==============================================================================
-INTRODUCTION                                                      *rust-intro*
+INTRODUCTION							  *rust-intro*
 
 This plugin provides syntax and supporting functionality for the Rust
 filetype.
 
 ==============================================================================
-SETTINGS                                                       *rust-settings*
+SETTINGS						       *rust-settings*
 
 This plugin has a few variables you can define in your vimrc that change the
 behavior of the plugin.
 
-                                                                *g:rustc_path*
+								*g:rustc_path*
 g:rustc_path~
 	Set this option to the path to rustc for use in the |:RustRun| and
 	|:RustExpand| commands. If unset, "rustc" will be located in $PATH: >
 	    let g:rustc_path = $HOME .. "/bin/rustc"
 <
 
-                                                  *g:rustc_makeprg_no_percent*
+						  *g:rustc_makeprg_no_percent*
 g:rustc_makeprg_no_percent~
 	Set this option to 1 to have 'makeprg' default to "rustc" instead of
 	"rustc %": >
 	    let g:rustc_makeprg_no_percent = 1
 <
 
-                                                              *g:rust_conceal*
+							      *g:rust_conceal*
 g:rust_conceal~
 	Set this option to turn on the basic |conceal| support: >
 	    let g:rust_conceal = 1
 <
 
-                                                     *g:rust_conceal_mod_path*
+						     *g:rust_conceal_mod_path*
 g:rust_conceal_mod_path~
 	Set this option to turn on |conceal| for the path connecting token
 	"::": >
 	    let g:rust_conceal_mod_path = 1
 <
 
-                                                          *g:rust_conceal_pub*
+							  *g:rust_conceal_pub*
 g:rust_conceal_pub~
 	Set this option to turn on |conceal| for the "pub" token: >
 	    let g:rust_conceal_pub = 1
 <
 
-                                                     *g:rust_recommended_style*
+						     *g:rust_recommended_style*
 g:rust_recommended_style~
-        Set this option to enable vim indentation and textwidth settings to
-        conform to style conventions of the rust standard library (i.e. use 4
-        spaces for indents and sets 'textwidth' to 99). This option is enabled
+	Set this option to enable vim indentation and textwidth settings to
+	conform to style conventions of the rust standard library (i.e. use 4
+	spaces for indents and sets 'textwidth' to 99). This option is enabled
 	by default. To disable it: >
 	    let g:rust_recommended_style = 0
 <
 
-                                                                 *g:rust_fold*
+								 *g:rust_fold*
 g:rust_fold~
 	Set this option to turn on |folding|: >
 	    let g:rust_fold = 1
@@ -76,39 +76,39 @@ g:rust_fold~
 	2		Braced blocks are folded. 'foldlevel' is left at the
 			global value (all folds are closed by default).
 
-                                                  *g:rust_bang_comment_leader*
+						  *g:rust_bang_comment_leader*
 g:rust_bang_comment_leader~
 	Set this option to 1 to preserve the leader on multi-line doc comments
 	using the /*! syntax: >
 	    let g:rust_bang_comment_leader = 1
 <
 
-                                                 *g:ftplugin_rust_source_path*
+						 *g:ftplugin_rust_source_path*
 g:ftplugin_rust_source_path~
 	Set this option to a path that should be prepended to 'path' for Rust
 	source files: >
 	    let g:ftplugin_rust_source_path = $HOME .. '/dev/rust'
 <
 
-                                                       *g:rustfmt_command*
+						       *g:rustfmt_command*
 g:rustfmt_command~
 	Set this option to the name of the 'rustfmt' executable in your $PATH. If
 	not specified it defaults to 'rustfmt' : >
 	    let g:rustfmt_command = 'rustfmt'
 <
-                                                       *g:rustfmt_autosave*
+						       *g:rustfmt_autosave*
 g:rustfmt_autosave~
 	Set this option to 1 to run |:RustFmt| automatically when saving a
 	buffer. If not specified it defaults to 0 : >
 	    let g:rustfmt_autosave = 0
 <
-                                                       *g:rustfmt_fail_silently*
+						       *g:rustfmt_fail_silently*
 g:rustfmt_fail_silently~
 	Set this option to 1 to prevent 'rustfmt' from populating the
 	|location-list| with errors. If not specified it defaults to 0: >
 	    let g:rustfmt_fail_silently = 0
 <
-                                                       *g:rustfmt_options*
+						       *g:rustfmt_options*
 g:rustfmt_options~
 	Set this option to a string of options to pass to 'rustfmt'. The
 	write-mode is already set to 'overwrite'. If not specified it
@@ -116,13 +116,13 @@ g:rustfmt_options~
 	    let g:rustfmt_options = ''
 <
 
-                                                          *g:rust_playpen_url*
+							  *g:rust_playpen_url*
 g:rust_playpen_url~
 	Set this option to override the URL for the playpen to use: >
 	    let g:rust_playpen_url = 'https://play.rust-lang.org/'
 <
 
-                                                        *g:rust_shortener_url*
+							*g:rust_shortener_url*
 g:rust_shortener_url~
 	Set this option to override the URL for the URL shortener: >
 	    let g:rust_shortener_url = 'https://is.gd/'
@@ -130,9 +130,9 @@ g:rust_shortener_url~
 
 
 ==============================================================================
-COMMANDS                                                       *rust-commands*
+COMMANDS						       *rust-commands*
 
-:RustRun  [args]                                                    *:RustRun*
+:RustRun  [args]						    *:RustRun*
 :RustRun! [rustc-args] [--] [args]
 		Compiles and runs the current file. If it has unsaved changes,
 		it will be saved first using |:update|. If the current file is
@@ -150,7 +150,7 @@ COMMANDS                                                       *rust-commands*
 		If |g:rustc_path| is defined, it is used as the path to rustc.
 		Otherwise it is assumed rustc can be found in $PATH.
 
-:RustExpand  [args]                                              *:RustExpand*
+:RustExpand  [args]						 *:RustExpand*
 :RustExpand! [TYPE] [args]
 		Expands the current file using --pretty and displays the
 		results in a new split. If the current file has unsaved
@@ -169,7 +169,7 @@ COMMANDS                                                       *rust-commands*
 		If |g:rustc_path| is defined, it is used as the path to rustc.
 		Otherwise it is assumed rustc can be found in $PATH.
 
-:RustEmitIr [args]                                               *:RustEmitIr*
+:RustEmitIr [args]						 *:RustEmitIr*
 		Compiles the current file to LLVM IR and displays the results
 		in a new split. If the current file has unsaved changes, it
 		will be saved first using |:update|. If the current file is an
@@ -180,7 +180,7 @@ COMMANDS                                                       *rust-commands*
 		If |g:rustc_path| is defined, it is used as the path to rustc.
 		Otherwise it is assumed rustc can be found in $PATH.
 
-:RustEmitAsm [args]                                             *:RustEmitAsm*
+:RustEmitAsm [args]						*:RustEmitAsm*
 		Compiles the current file to assembly and displays the results
 		in a new split. If the current file has unsaved changes, it
 		will be saved first using |:update|. If the current file is an
@@ -191,7 +191,7 @@ COMMANDS                                                       *rust-commands*
 		If |g:rustc_path| is defined, it is used as the path to rustc.
 		Otherwise it is assumed rustc can be found in $PATH.
 
-:RustPlay                                                          *:RustPlay*
+:RustPlay							   *:RustPlay*
 		This command will only work if you have web-api.vim installed
 		(available at https://github.com/mattn/webapi-vim).  It sends the
 		current selection, or if nothing is selected, the entirety of the
@@ -204,7 +204,7 @@ COMMANDS                                                       *rust-commands*
 		|g:rust_shortener_url| is the base URL for the shortener, by
 		default "https://is.gd/"
 
-:RustFmt                                                       *:RustFmt*
+:RustFmt						       *:RustFmt*
 		Runs |g:rustfmt_command| on the current buffer. If
 		|g:rustfmt_options| is set then those will be passed to the
 		executable.
@@ -214,12 +214,12 @@ COMMANDS                                                       *rust-commands*
 		|g:rustfmt_command|. If |g:rustfmt_fail_silently| is set to 1
 		then it will not populate the |location-list|.
 
-:RustFmtRange                                                  *:RustFmtRange*
+:RustFmtRange						       *:RustFmtRange*
 		Runs |g:rustfmt_command| with selected range. See
 		|:RustFmt| for any other information.
 
 ==============================================================================
-MAPPINGS                                                       *rust-mappings*
+MAPPINGS						       *rust-mappings*
 
 This plugin defines mappings for |[[| and |]]| to support hanging indents.
 
diff --git a/runtime/doc/map.txt b/runtime/doc/map.txt
index 4ac307cee..c33c9f869 100644
--- a/runtime/doc/map.txt
+++ b/runtime/doc/map.txt
@@ -1,4 +1,4 @@
-*map.txt*       For Vim version 9.0.  Last change: 2022 Sep 26
+*map.txt*       For Vim version 9.0.  Last change: 2022 Oct 19
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -1483,7 +1483,7 @@ See |:verbose-cmd| for more information.
 
 
 Command attributes ~
-                                                       *command-attributes*
+							*command-attributes*
 User-defined commands are treated by Vim just like any other Ex commands.  They
 can have arguments, or have a range specified.  Arguments are subject to
 completion as filenames, buffers, etc.  Exactly how this works depends upon the
diff --git a/runtime/doc/message.txt b/runtime/doc/message.txt
index 805fc37dd..2e23ac4f9 100644
--- a/runtime/doc/message.txt
+++ b/runtime/doc/message.txt
@@ -1,4 +1,4 @@
-*message.txt*   For Vim version 9.0.  Last change: 2022 Jan 26
+*message.txt*   For Vim version 9.0.  Last change: 2022 Oct 18
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -635,6 +635,7 @@ probably means that some other program changed the file.  You will have to
 find out what happened, and decide which version of the file you want to keep.
 Set the 'autoread' option if you want to do this automatically.
 This message is not given when 'buftype' is not empty.
+Also see the |FileChangedShell| autocommand.
 
 There is one situation where you get this message even though there is nothing
 wrong: If you save a file in Windows on the day the daylight saving time
diff --git a/runtime/doc/options.txt b/runtime/doc/options.txt
index 5beb6a283..0a4df61df 100644
--- a/runtime/doc/options.txt
+++ b/runtime/doc/options.txt
@@ -1,4 +1,4 @@
-*options.txt*	For Vim version 9.0.  Last change: 2022 Oct 15
+*options.txt*	For Vim version 9.0.  Last change: 2022 Oct 28
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -3048,6 +3048,15 @@ A jump table for the options with a short description can be found at |Q_op|.
 	When 'encoding' is set to a Unicode encoding, and 'fileencodings' was
 	not set yet, the default for 'fileencodings' is changed.
 
+			*'endoffile'* *'eof'* *'noendoffile'* *'noeof'*
+'endoffile' 'eof'	boolean	(default on)
+			local to buffer
+	Indicates that a CTRL-Z character was found at the end of the file
+	when reading it.  Normally only happens when 'fileformat' is "dos".
+	When writing a file and this option is off and the 'binary' option
+	is on, or 'fixeol' option is off, no CTRL-Z will be written at the
+	end of the file.
+
 			*'endofline'* *'eol'* *'noendofline'* *'noeol'*
 'endofline' 'eol'	boolean	(default on)
 			local to buffer
@@ -3452,7 +3461,7 @@ A jump table for the options with a short description can be found at |Q_op|.
 'fixendofline' 'fixeol'	boolean	(default on)
 			local to buffer
 	When writing a file and this option is on, <EOL> at the end of file
-	will be restored if missing. Turn this option off if you want to
+	will be restored if missing.  Turn this option off if you want to
 	preserve the situation from the original file.
 	When the 'binary' option is set the value of this option doesn't
 	matter.
diff --git a/runtime/doc/pi_tar.txt b/runtime/doc/pi_tar.txt
index 7b1c7db2a..d1b2959a4 100644
--- a/runtime/doc/pi_tar.txt
+++ b/runtime/doc/pi_tar.txt
@@ -1,4 +1,4 @@
-*pi_tar.txt*	For Vim version 9.0.  Last change: 2020 Jan 07
+*pi_tar.txt*	For Vim version 9.0.  Last change: 2022 Oct 17
 
 		       +====================+
 		       | Tar File Interface |
@@ -80,20 +80,20 @@ Copyright 2005-2017:					*tar-copyright*
 
    These options are variables that one may change, typically in one's
    <.vimrc> file.
-                         Default
-   Variable               Value   Explanation
+			 Default
+   Variable		  Value   Explanation
    *g:tar_browseoptions*  "Ptf"   used to get a list of contents
-   *g:tar_readoptions*    "OPxf"  used to extract a file from a tarball
-   *g:tar_cmd*            "tar"   the name of the tar program
-   *g:tar_nomax*            0     if true, file window will not be maximized
-   *g:tar_secure*         undef   if exists:
+   *g:tar_readoptions*	  "OPxf"  used to extract a file from a tarball
+   *g:tar_cmd*		  "tar"   the name of the tar program
+   *g:tar_nomax*	    0	  if true, file window will not be maximized
+   *g:tar_secure*	  undef   if exists:
 					"--"s will be used to prevent unwanted
 					option expansion in tar commands.
 					Please be sure that your tar command
 					accepts "--"; Posix compliant tar
 					utilities do accept them.
 				  if not exists:
-				  	The tar plugin will reject any tar
+					The tar plugin will reject any tar
 					files or member files that begin with
 					"-"
 				  Not all tar's support the "--" which is why
diff --git a/runtime/doc/pi_zip.txt b/runtime/doc/pi_zip.txt
index d5a71b77a..a5b056f17 100644
--- a/runtime/doc/pi_zip.txt
+++ b/runtime/doc/pi_zip.txt
@@ -1,4 +1,4 @@
-*pi_zip.txt*	For Vim version 9.0.  Last change: 2021 Nov 08
+*pi_zip.txt*	For Vim version 9.0.  Last change: 2022 Oct 17
 
 				+====================+
 				| Zip File Interface |
@@ -39,7 +39,7 @@ Copyright: Copyright (C) 2005-2015 Charles E Campbell	 *zip-copyright*
 
    OPTIONS~
 
-   							*g:zip_nomax*
+							*g:zip_nomax*
 
    If this variable exists and is true, the file window will not be
    automatically maximized when opened.
@@ -54,21 +54,21 @@ Copyright: Copyright (C) 2005-2015 Charles E Campbell	 *zip-copyright*
    under Windows (").  If you'd rather have no quotes, simply set
    g:zip_shq to the empty string (let g:zip_shq= "") in your <.vimrc>.
 
-   							*g:zip_unzipcmd*
+							*g:zip_unzipcmd*
    Use this option to specify the program which does the duty of "unzip".
    It's used during browsing. By default: >
-   	let g:zip_unzipcmd= "unzip"
+	let g:zip_unzipcmd= "unzip"
 <
 							*g:zip_zipcmd*
    Use this option to specify the program which does the duty of "zip".
    It's used during the writing (updating) of a file already in a zip
    file; by default: >
-   	let g:zip_zipcmd= "zip"
+	let g:zip_zipcmd= "zip"
 <
 							*g:zip_extractcmd*
    This option specifies the program (and any options needed) used to
    extract a file from a zip archive.  By default, >
-   	let g:zip_extractcmd= g:zip_unzipcmd
+	let g:zip_extractcmd= g:zip_unzipcmd
 <
    PREVENTING LOADING~
 
@@ -103,14 +103,14 @@ Copyright: Copyright (C) 2005-2015 Charles E Campbell	 *zip-copyright*
 ==============================================================================
 4. History							*zip-history* {{{1
    v32 Oct 22, 2021 * to avoid an issue with a vim 8.2 patch, zipfile: has
-   		      been changed to zipfile:// . This often shows up
+		      been changed to zipfile:// . This often shows up
 		      as zipfile:/// with zipped files that are root-based.
    v29 Apr 02, 2017 * (Klartext) reported that an encrypted zip file could
-   		      opened but the swapfile held unencrypted contents.
+		      opened but the swapfile held unencrypted contents.
 		      The solution is to edit the contents of a zip file
 		      using the |:noswapfile| modifier.
    v28 Oct 08, 2014 * changed the sanity checks for executables to reflect
-   		      the command actually to be attempted in zip#Read()
+		      the command actually to be attempted in zip#Read()
 		      and zip#Write()
 		    * added the extraction of a file capability
        Nov 30, 2015 * added *.epub to the |g:zipPlugin_ext| list
diff --git a/runtime/doc/quickref.txt b/runtime/doc/quickref.txt
index 370e1f2fa..adf2b4f0a 100644
--- a/runtime/doc/quickref.txt
+++ b/runtime/doc/quickref.txt
@@ -1,4 +1,4 @@
-*quickref.txt*  For Vim version 9.0.  Last change: 2022 Oct 15
+*quickref.txt*  For Vim version 9.0.  Last change: 2022 Oct 28
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -689,6 +689,7 @@ Short explanation of each option:		*option-list*
 'edcompatible'	  'ed'	    toggle flags of ":substitute" command
 'emoji'		  'emo'	    emoji characters are considered full width
 'encoding'	  'enc'     encoding used internally
+'endoffile'	  'eof'     write CTRL-Z at end of the file
 'endofline'	  'eol'     write <EOL> for last line in file
 'equalalways'	  'ea'	    windows are automatically made the same size
 'equalprg'	  'ep'	    external program to use for "=" command
diff --git a/runtime/doc/scroll.txt b/runtime/doc/scroll.txt
index d43ecb28a..8e57be441 100644
--- a/runtime/doc/scroll.txt
+++ b/runtime/doc/scroll.txt
@@ -1,4 +1,4 @@
-*scroll.txt*    For Vim version 9.0.  Last change: 2022 May 07
+*scroll.txt*    For Vim version 9.0.  Last change: 2022 Oct 17
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -280,6 +280,17 @@ You can also use Alt and Ctrl modifiers.
 
 This only works when Vim gets the scroll wheel events, of course.  You can
 check if this works with the "xev" program.
+							*mouse-scrolling-off*
+If you do not want the mouse to cause scrolling (e.g. because resting your
+palm on the touchpad causes scroll events), you can disable that with: >
+	:map <ScrollWheelDown> <Nop>
+	:map! <ScrollWheelDown> <Nop>
+	:map <ScrollWheelUp> <Nop>
+	:map! <ScrollWheelUp> <Nop>
+	:map <ScrollWheelLeft> <Nop>
+	:map! <ScrollWheelLeft> <Nop>
+	:map <ScrollWheelRight> <Nop>
+	:map! <ScrollWheelRight> <Nop>
 
 When using XFree86, the /etc/XF86Config file should have the correct entry for
 your mouse.  For FreeBSD, this entry works for a Logitech scrollmouse: >
diff --git a/runtime/doc/syntax.txt b/runtime/doc/syntax.txt
index 89ac893fe..fc93378e1 100644
--- a/runtime/doc/syntax.txt
+++ b/runtime/doc/syntax.txt
@@ -1,4 +1,4 @@
-*syntax.txt*	For Vim version 9.0.  Last change: 2022 Oct 14
+*syntax.txt*	For Vim version 9.0.  Last change: 2022 Oct 17
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -500,7 +500,7 @@ Force to omit the line numbers: >
 Go back to the default to use 'number' by deleting the variable: >
    :unlet g:html_number_lines
 <
-                                                             *g:html_line_ids*
+							*g:html_line_ids*
 Default: 1 if |g:html_number_lines| is set, 0 otherwise.
 When 1, adds an HTML id attribute to each line number, or to an empty <span>
 inserted for that purpose if no line numbers are shown. This ID attribute
@@ -692,6 +692,22 @@ the rendered page generated by 2html.vim.
 >
    :let g:html_no_pre = 1
 <
+							       *g:html_no_doc*
+Default: 0.
+When 1 it doesn't generate a full HTML document with a DOCTYPE, <head>,
+<body>, etc. If |g:html_use_css| is enabled (the default) you'll have to
+define the CSS manually. The |g:html_dynamic_folds| and |g:html_line_ids|
+settings (off by default) also insert some JavaScript.
+
+
+							     *g:html_no_links*
+Default: 0.
+Don't generate <a> tags for text that looks like an URL.
+
+							  *g:html_no_modeline*
+Default: 0.
+Don't generate a modeline disabling folding.
+
 							  *g:html_expand_tabs*
 Default: 0 if 'tabstop' is 8, 'expandtab' is 0, 'vartabstop' is not in use,
 	       and no fold column or line numbers occur in the generated HTML;
@@ -2932,7 +2948,7 @@ Default folding is rather detailed, i.e., small syntax units like "if", "do",
 
 You can set "ruby_foldable_groups" to restrict which groups are foldable: >
 
-        :let ruby_foldable_groups = 'if case %'
+	:let ruby_foldable_groups = 'if case %'
 <
 The value is a space-separated list of keywords:
 
@@ -2940,22 +2956,22 @@ The value is a space-separated list of keywords:
     --------  ------------------------------------- ~
     ALL        Most block syntax (default)
     NONE       Nothing
-    if         "if" or "unless" block
+    if	       "if" or "unless" block
     def        "def" block
     class      "class" block
     module     "module" block
-    do         "do" block
+    do	       "do" block
     begin      "begin" block
     case       "case" block
     for        "for", "while", "until" loops
-    {          Curly bracket block or hash literal
-    [          Array literal
-    %          Literal with "%" notation, e.g.: %w(STRING), %!STRING!
-    /          Regexp
+    {	       Curly bracket block or hash literal
+    [	       Array literal
+    %	       Literal with "%" notation, e.g.: %w(STRING), %!STRING!
+    /	       Regexp
     string     String and shell command output (surrounded by ', ", `)
-    :          Symbol
-    #          Multiline comment
-    <<         Here documents
+    :	       Symbol
+    #	       Multiline comment
+    <<	       Here documents
     __END__    Source code after "__END__" directive
 
 						*ruby_no_expensive*
@@ -3802,7 +3818,7 @@ SYNTAX ISKEYWORD SETTING				*:syn-iskeyword*
 
 	clear:		Syntax specific iskeyword setting is disabled and the
 			buffer-local 'iskeyword' setting is used.
-	{option}        Set the syntax 'iskeyword' option to a new value.
+	{option}       	Set the syntax 'iskeyword' option to a new value.
 
 	Example: >
   :syntax iskeyword @,48-57,192-255,$,_
@@ -5280,7 +5296,7 @@ guisp={color-name}					*highlight-guisp*
 		"gg"	is the Green value
 		"bb"	is the Blue value
 	All values are hexadecimal, range from "00" to "ff".  Examples: >
-            :highlight Comment guifg=#11f0c3 guibg=#ff00ff
+	    :highlight Comment guifg=#11f0c3 guibg=#ff00ff
 <
 	If you are authoring a color scheme and use the same hexadecimal value
 	repeatedly, you can define a name for it in |v:colornames|. For
diff --git a/runtime/doc/term.txt b/runtime/doc/term.txt
index 906e44404..fdbcc7d41 100644
--- a/runtime/doc/term.txt
+++ b/runtime/doc/term.txt
@@ -1,4 +1,4 @@
-*term.txt*      For Vim version 9.0.  Last change: 2022 Apr 23
+*term.txt*      For Vim version 9.0.  Last change: 2022 Oct 21
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -569,7 +569,7 @@ anymore.
 Vim supports using true colors in the terminal (taken from |highlight-guifg|
 and |highlight-guibg|), given that the terminal supports this. To make this
 work the 'termguicolors' option needs to be set.
-See https://gist.github.com/XVilka/8346728 for a list of terminals that
+See https://github.com/termstandard/colors for a list of terminals that
 support true colors.
 
 Sometimes setting 'termguicolors' is not enough and one has to set the |t_8f|
@@ -1005,6 +1005,8 @@ and then drag) will result in whole words to be selected.  This continues
 until the button is released, at which point the selection is per character
 again.
 
+For scrolling with the mouse see |scroll-mouse-wheel|.
+
 							*gpm-mouse*
 The GPM mouse is only supported when the |+mouse_gpm| feature was enabled at
 compile time.  The GPM mouse driver (Linux console) does not support quadruple
diff --git a/runtime/doc/todo.txt b/runtime/doc/todo.txt
index d6562d5a9..e1971b686 100644
--- a/runtime/doc/todo.txt
+++ b/runtime/doc/todo.txt
@@ -1,4 +1,4 @@
-*todo.txt*      For Vim version 9.0.  Last change: 2022 Oct 16
+*todo.txt*      For Vim version 9.0.  Last change: 2022 Oct 28
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -41,10 +41,7 @@ browser use: https://github.com/vim/vim/issues/1234
 'smoothscroll':
 - CTRL-E and gj in long line with 'scrolloff' 5 not working well yet.
 - computing 'scrolloff' position row use w_skipcol
-
-Check textprop right/above/below with 'number' set and "n" in 'cpo'.
-
-Don't do anything for ":!". #11372
+- PR: Error in screen dump for Test_smoothscroll_one_long_line.  (PR #11436)
 
 
 Further Vim9 improvements, possibly after launch:
@@ -164,6 +161,8 @@ Terminal emulator window:
 - When 'encoding' is not utf-8, or the job is using another encoding, setup
   conversions.
 
+Crash when a variable is removed while listing variables (Issue #11435)
+
 Autoconf: must use autoconf 2.69, later version generates lots of warnings
 - try using autoconf 2.71 and fix all "obsolete" warnings  #11322
 
@@ -267,6 +266,9 @@ New English spell files also have very slow suggestions.
 French spell files don't work correctly.  #4916
     Make Vim understand the format somehow?
 
+When 'spelloptions' is "camel" then zG doesn't work on some words.
+(Gary Johnson, 17 Oct 2022)
+
 Make "g>" and "g<" in Visual mode move the text right or left.
 Also for a block selection.  #8558
 
@@ -340,6 +342,7 @@ Is this the right solution?  Need to cleanup langmap behavior:
 So that replaying the register doesn't use keymap/langmap and still does the
 same thing.
 Also see #737: langmap not applied to replaying recording.
+Perhaps also related: #5147
 
 Matchparen doesn't remove highlight after undo. (#7054)
 Is OK when syntax HL is active.
@@ -380,6 +383,8 @@ and/or "sandbox" are set.
 
 Problem with auto-formatting - inserting space and putting cursor before added
 character. (#6154)
+Auto-formatting comments joins a following non-comment line when the comment
+ends in a space. (Adam Levy, 18 Oct 2022)
 
 When 'lazyredraw' is set sometimes the title is not updated.
 (Jason Franklin, 2020 Feb 3)  Looks like a race condition.
diff --git a/runtime/doc/various.txt b/runtime/doc/various.txt
index 1d21e1a9e..56b304076 100644
--- a/runtime/doc/various.txt
+++ b/runtime/doc/various.txt
@@ -1,4 +1,4 @@
-*various.txt*   For Vim version 9.0.  Last change: 2022 Oct 13
+*various.txt*   For Vim version 9.0.  Last change: 2022 Oct 17
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -249,8 +249,7 @@ g8			Print the hex values of the bytes used in the
 
 							*:!cmd* *:!*
 :!{cmd}			Execute {cmd} with the shell.  See also the 'shell'
-			and 'shelltype' option. `:!` without a {cmd} is a no-op,
-			it does nothing.
+			and 'shelltype' option.
 							*E34*
 			Any '!' in {cmd} is replaced with the previous
 			external command (see also 'cpoptions').  But not when
