diff --git a/runtime/doc/eval.txt b/runtime/doc/eval.txt
index 9a3546158..6eab0833f 100644
--- a/runtime/doc/eval.txt
+++ b/runtime/doc/eval.txt
@@ -1549,7 +1549,7 @@ to be doubled.  These two commands are equivalent: >
 	if a =~ '\s*'
 
 
-interpolated-string				*$quote* *interp-string* *E256*
+interpolated-string				*$quote* *interp-string*
 --------------------
 $"string"		interpolated string constant		*expr-$quote*
 $'string'		interpolated literal string constant	*expr-$'*
diff --git a/runtime/doc/textprop.txt b/runtime/doc/textprop.txt
index a0c8c348d..150d466e2 100644
--- a/runtime/doc/textprop.txt
+++ b/runtime/doc/textprop.txt
@@ -187,6 +187,8 @@ prop_add({lnum}, {col}, {props})
 		in the text will move the cursor to the first character after
 		the text, or the last character of the line.
 		A negative "id" will be chosen and is returned.  Once a
+		Any Tab in the text will be changed to a space (Rationale:
+		otherwise the size of the text is difficult to compute).
 		property with "text" has been added for a buffer then using a
 		negative "id" for any other property will give an error:
 		*E1293*
diff --git a/runtime/doc/todo.txt b/runtime/doc/todo.txt
index 7156df742..d2adeffe1 100644
--- a/runtime/doc/todo.txt
+++ b/runtime/doc/todo.txt
@@ -38,23 +38,17 @@ browser use: https://github.com/vim/vim/issues/1234
 							*known-bugs*
 -------------------- Known bugs and current work -----------------------
 
-PR to consider:
-- stricter parsing for has('patch-x.y.z')  #10752
-- cmdheight=0  #10675  Does it work properly?
-- add splitscroll  #10682  Useful?  Any trouble? Null Chilly says it's OK.
-    suggestion: names instead of numbers for the option value
-    problem depending on whether window is focused or not
-
 Support virtual text:  #7553
-- Remove and free text when textprop is removed with negative ID.
-- "gj" does not work correctly
-- no virtual text when 'signcolumn' is set to "yes"  #10794
-- placement at the end of the line: after the text (text_align: "end"), right
-  aligned (text_align: "right"); choice: truncate when not enough space or
-  wrap to next line (text_wrap: "yes"); Also: fill with space to text wraps to
-  start of next screen line (text_align: "below")
-  Also consider an empty line, should fix #10786.  Also check inserting text.
+- Wrong cursor position in Insert mode, wrong pos after typing char #10786
+- implement "text_align" - right
+    when not truncated, may increase line height
+- implement "text_align" - below
+    need to compute extra screen line
+- implement "text_wrap" - truncate
+- when Tab is in text handle it like a space
+- Also consider an empty line, should fix #10786.  Also check inserting text.
 - win_lbr_chartabsize() TODO item: count screen cells
+- check that when inserting/deleting text col == MAXCOL isn't changed
 - wrong cursor position (Yegappan, July 27)
 - many tests
 
@@ -222,9 +216,14 @@ Terminal emulator window:
   conversions.
 
 Patches considered for including:
+- use int instead of char_ for index  #10818  needs a test
 - Add "-n" option to xxd. #10599  needs a test
 - allow for nesting of timeout, sketch in #10595
 
+Add 'splitscroll'  #10682  Useful?  Any trouble? Null Chilly says it's OK.
+    suggestion: names instead of numbers for the option value
+    problem depending on whether window is focused or not
+
 Autoconf: must use autoconf 2.69, later version generates lots of warnings
 - try using autoconf 2.71 and fix all "obsolete" warnings
 
@@ -247,6 +246,9 @@ pass it on with modifications.
 Using "A" and "o" in manually created fold (in empty buffer) does not behave
 consistenly (James McCoy, #10698)
 
+To avoid flicker: add an option that when a screen clear is requested, instead
+of clearing it draws everything and uses "clear to end of line" for every line.
+
 When scheme can't be found by configure there is no clear "not found" message:
     configure:5769: checking MzScheme install prefix
     configure:5781: result: 
diff --git a/runtime/doc/vim9.txt b/runtime/doc/vim9.txt
index ce1b182d9..5fba47ba4 100644
--- a/runtime/doc/vim9.txt
+++ b/runtime/doc/vim9.txt
@@ -107,7 +107,7 @@ script and `:def` functions; details are below:
 	`:t`
   	`:xit`
 - Some commands, especially those used for flow control, cannot be shortened.
-  E.g., `:throw` cannot be written as `:th`. *E839*
+  E.g., `:throw` cannot be written as `:th`.
 - You cannot use curly-braces names.
 - A range before a command must be prefixed with a colon: >
 	:%s/this/that
