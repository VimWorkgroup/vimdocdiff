diff --git a/runtime/doc/builtin.txt b/runtime/doc/builtin.txt
index 55a0731a8..3f52e109c 100644
--- a/runtime/doc/builtin.txt
+++ b/runtime/doc/builtin.txt
@@ -1,4 +1,4 @@
-*builtin.txt*	For Vim version 9.1.  Last change: 2025 Apr 27
+*builtin.txt*	For Vim version 9.1.  Last change: 2025 May 08
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -194,9 +194,8 @@ filter({expr1}, {expr2})	List/Dict/Blob/String
 					remove items from {expr1} where
 					{expr2} is 0
 finddir({name} [, {path} [, {count}]])
-				String	find directory {name} in {path}
 findfile({name} [, {path} [, {count}]])
-				String	find file {name} in {path}
+				String/List find dir/file {name} in {path}
 flatten({list} [, {maxdepth}])	List	flatten {list} up to {maxdepth} levels
 flattennew({list} [, {maxdepth}])
 				List	flatten a copy of {list}
@@ -2286,6 +2285,7 @@ cursor({list})
 		Can also be used as a |method|: >
 			GetCursorPos()->cursor()
 <
+		Returns 0 when the position could be set, -1 otherwise.
 		Return type: |Number|
 
 
@@ -3167,7 +3167,7 @@ feedkeys({string} [, {mode}])				*feedkeys()*
 		Can also be used as a |method|: >
 			GetInput()->feedkeys()
 <
-		Return type: |String| or list<string> depending on {list}
+		Return type: |Number|
 
 
 filecopy({from}, {to})					*filecopy()*
@@ -4962,7 +4962,7 @@ getreg([{regname} [, 1 [, {list}]]])			*getreg()*
 		Can also be used as a |method|: >
 			GetRegname()->getreg()
 <
-		Return type: |String|
+		Return type: |String| or list<string> depending on {list}
 
 
 getreginfo([{regname}])					*getreginfo()*
@@ -9828,6 +9828,7 @@ setcursorcharpos({list})
 		Can also be used as a |method|: >
 			GetCursorPos()->setcursorcharpos()
 <
+		Returns 0 when the position could be set, -1 otherwise.
 		Return type: |Number|
 
 
diff --git a/runtime/doc/develop.txt b/runtime/doc/develop.txt
index 18e2caec7..621e7f668 100644
--- a/runtime/doc/develop.txt
+++ b/runtime/doc/develop.txt
@@ -1,4 +1,4 @@
-*develop.txt*   For Vim version 9.1.  Last change: 2025 Apr 18
+*develop.txt*   For Vim version 9.1.  Last change: 2025 May 05
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -215,7 +215,7 @@ them:
 - flexible array members: Not supported by HP-UX C compiler (John Marriott)
 
 
-COMMENTS					       *style-comments*
+COMMENTS						*style-comments*
 
 Try to avoid putting multiline comments inside a function body: if the
 function is so complex that you need to separately comment parts of it, you
@@ -230,8 +230,7 @@ For everything else use: >
     // comment
 <
 
-
-INDENTATION					      *style-indentation*
+INDENTATION						*style-indentation*
 
 We use 4 space to indent the code. If you are using Vim to edit the source,
 you don't need to do anything due to the |modeline|.
@@ -239,7 +238,7 @@ you don't need to do anything due to the |modeline|.
 For other editors an `.editorconfig` is provided at the root of the repo.
 
 
-DECLARATIONS	                                     *style-declarations*
+DECLARATIONS						*style-declarations*
 
 Declare, when possible, `for` loop variables in the guard:
 OK: >
@@ -259,114 +258,76 @@ Wrong: >
     int *ptr;
 <
 
-
-BRACES							   *style-braces*
+BRACES							*style-braces*
 
 All curly braces must be returned onto a new line:
 OK: >
     if (cond)
     {
-       cmd;
-       cmd;
+	cmd;
+	cmd;
     }
     else
     {
-       cmd;
-       cmd;
+	cmd;
+	cmd;
     }
 <
 Wrong: >
     if (cond) {
-       cmd;
-       cmd;
+	cmd;
+	cmd;
     } else {
-       cmd;
-       cmd;
+	cmd;
+	cmd;
     }
 <
 OK: >
     while (cond)
     {
 	cmd;
+	cmd;
     }
 <
 Wrong: >
     while (cond) {
 	cmd;
+	cmd;
     }
 <
-When a block has one line, including comments, the braces can be left out.
 OK: >
-    if (cond)
-	cmd;
-    else
-	cmd;
-<
-Wrong: >
-    if (cond)
-	/*
-	 * comment
-	 */
+    do
+    {
 	cmd;
-    else
 	cmd;
+    } while (cond);
 <
-When an `if`/`else` has braces on one block, the other should have it too.
-OK: >
-    if (cond)
-    {
-	cmd;
-    }
-    else
+or >
+    do
     {
 	cmd;
 	cmd;
     }
+    while (cond);
 <
 Wrong: >
-    if (cond)
-	cmd;
-    else
-    {
-	cmd;
-	cmd;
-    }
-
-    if (cond)
-    {
-	cmd;
-	cmd;
-    }
-    else
+    do {
 	cmd;
-<
-OK: >
-    while (cond)
 	cmd;
+    } while (cond);
 <
-Wrong:
->
-    while (cond)
-	if (cond)
-	    cmd;
-<
-
 
 TYPES							    *style-types*
 
-Use descriptive types. You can find a list of them in the src/structs.h file
-and probably in a typedef in the file you are working on.
-
+Use descriptive types. These are defined in src/vim.h, src/structs.h etc.
 Note that all custom types are postfixed with "_T"
 
-OK: >
-    int is_valid_line_number(linenr_T lnum);
-<
-Wrong: >
-    int is_valid_line_number(unsigned long lnum);
+Example: >
+    linenr_T
+    buf_T
+    pos_T
 <
 
-
 SPACES AND PUNCTUATION					   *style-spaces*
 
 No space between a function name and the bracket:
@@ -386,8 +347,8 @@ Wrong:  func(arg1,arg2);	for (i = 0;i < 2;++i)
 
 Use a space before and after '=', '+', '/', etc.
 
-Wrong:	var=a*5;
 OK:	var = a * 5;
+Wrong:	var=a*5;
 
 Use empty lines to group similar actions together.
 
@@ -412,7 +373,6 @@ Wrong: >
     while (buf != NULL && !got_int)
 <
 
-
 FUNCTIONS						*style-functions*
 
 Use function declarations with the return type on a separate indented line.
diff --git a/runtime/doc/helphelp.txt b/runtime/doc/helphelp.txt
index 647c35ad2..4e08d9059 100644
--- a/runtime/doc/helphelp.txt
+++ b/runtime/doc/helphelp.txt
@@ -1,4 +1,4 @@
-*helphelp.txt*	For Vim version 9.1.  Last change: 2025 Apr 21
+*helphelp.txt*	For Vim version 9.1.  Last change: 2025 May 04
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -287,9 +287,11 @@ The latter supports the following normal commands: >
 	<Home>     | select first entry
 	<End>      | select last entry
 
-The plugin can also provide a table of contents in man pages, markdown files,
-and terminal buffers.  In the latter, the entries will be the past executed
-shell commands.  To find those, the following pattern is used: >
+The plugin can also provide a table of contents in buffers of the following
+filetypes: asciidoc, html, man, markdown, tex, vim, and xhtml.  In addition
+it also provide a table of contents for a terminal buffer, which produces
+entries that are the past executed shell commands.  To find those, by default,
+the following pattern is used: >
 
 	^\w\+@\w\+:\f\+\$\s
 
@@ -303,6 +305,9 @@ Tip: After inserting a pattern to look for with the `/` command, if you press
 <Esc> instead of <CR>, you can then get more context for each remaining entry
 by pressing `J` or `K`.
 
+Refer |helptoc.vim| for more details about helptoc, particularly about using
+it with filetypes other than help, and configuring its options.
+
 ==============================================================================
 2. Translated help files				*help-translated*
 
diff --git a/runtime/doc/insert.txt b/runtime/doc/insert.txt
index f52cf40ad..f3d92b290 100644
--- a/runtime/doc/insert.txt
+++ b/runtime/doc/insert.txt
@@ -1,4 +1,4 @@
-*insert.txt*    For Vim version 9.1.  Last change: 2025 Apr 14
+*insert.txt*    For Vim version 9.1.  Last change: 2025 May 08
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -1347,6 +1347,7 @@ use all space available.
 The 'pumwidth' option can be used to set a minimum width.  The default is 15
 characters.
 
+							*compl-states*
 There are three states:
 1. A complete match has been inserted, e.g., after using CTRL-N or CTRL-P.
 2. A cursor key has been used to select another match.  The match was not
diff --git a/runtime/doc/options.txt b/runtime/doc/options.txt
index 6c60b5896..f3824cdbf 100644
--- a/runtime/doc/options.txt
+++ b/runtime/doc/options.txt
@@ -1,4 +1,4 @@
-*options.txt*	For Vim version 9.1.  Last change: 2025 Apr 30
+*options.txt*	For Vim version 9.1.  Last change: 2025 May 08
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -6038,7 +6038,7 @@ A jump table for the options with a short description can be found at |Q_op|.
 			feature}
 	This option tells Vim what the mouse pointer should look like in
 	different modes.  The option is a comma-separated list of parts, much
-	like used for 'guicursor'.  Each part consist of a mode/location-list
+	like used for 'guicursor'.  Each part consists of a mode/location-list
 	and an argument-list:
 		mode-list:shape,mode-list:shape,..
 	The mode-list is a dash separated list of these modes/locations:
@@ -6066,26 +6066,26 @@ A jump table for the options with a short description can be found at |Q_op|.
 
 	The shape is one of the following:
 	avail	name		looks like ~
-	w x	arrow		Normal mouse pointer
-	w x	blank		no pointer at all (use with care!)
-	w x	beam		I-beam
-	w x	updown		up-down sizing arrows
-	w x	leftright	left-right sizing arrows
-	w x	busy		The system's usual busy pointer
-	w x	no		The system's usual 'no input' pointer
-	  x	udsizing	indicates up-down resizing
-	  x	lrsizing	indicates left-right resizing
-	  x	crosshair	like a big thin +
-	  x	hand1		black hand
-	  x	hand2		white hand
-	  x	pencil		what you write with
-	  x	question	big ?
-	  x	rightup-arrow	arrow pointing right-up
-	w x	up-arrow	arrow pointing up
+	w x g   arrow		Normal mouse pointer
+	w x     blank		no pointer at all (use with care!)
+	w x g   beam		I-beam
+	w x g	updown		up-down sizing arrows
+	w x g	leftright	left-right sizing arrows
+	w x g	busy		The system's usual busy pointer
+	w x g	no		The system's usual 'no input' pointer
+	  x g	udsizing	indicates up-down resizing
+	  x g	lrsizing	indicates left-right resizing
+	  x g	crosshair	like a big thin +
+	  x g   hand1		black hand
+	  x g	hand2		white hand
+	  x     pencil		what you write with
+	  x g	question	big ?
+	  x     rightup-arrow	arrow pointing right-up
+	w x     up-arrow	arrow pointing up
 	  x	<number>	any X11 pointer number (see X11/cursorfont.h)
 
 	The "avail" column contains a 'w' if the shape is available for Win32,
-	x for X11.
+	x for X11 (including GTK+ 2), g for GTK+ 3.
 	Any modes not specified or shapes not available use the normal mouse
 	pointer.
 
@@ -7742,9 +7742,11 @@ A jump table for the options with a short description can be found at |Q_op|.
 	Override the 'ignorecase' option if the search pattern contains upper
 	case characters.  Only used when the search pattern is typed and
 	'ignorecase' option is on.  Used for the commands "/", "?", "n", "N",
-	":g" and ":s".  Not used for "*", "#", "gd", tag search, etc.  After
-	"*" and "#" you can make 'smartcase' used by doing a "/" command,
-	recalling the search pattern from history and hitting <Enter>.
+	":g" and ":s" and when filtering matches for the completion menu
+	|compl-states|.
+	Not used for "*", "#", "gd", tag search, etc.  After "*" and "#" you
+	can make 'smartcase' used by doing a "/" command, recalling the search
+	pattern from history and hitting <Enter>.
 	NOTE: This option is reset when 'compatible' is set.
 
 			     *'smartindent'* *'si'* *'nosmartindent'* *'nosi'*
diff --git a/runtime/doc/version9.txt b/runtime/doc/version9.txt
index 9560b1dfb..371e4b314 100644
--- a/runtime/doc/version9.txt
+++ b/runtime/doc/version9.txt
@@ -1,4 +1,4 @@
-*version9.txt*  For Vim version 9.1.  Last change: 2025 Apr 24
+*version9.txt*  For Vim version 9.1.  Last change: 2025 May 08
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -41626,6 +41626,7 @@ Completion: ~
   "{flag}^<limit>" notation
 - add ":filetype" command completion
 - add "filetypecmd" completion type for |getcompletion()|
+- 'smartcase' applies to completion filtering
 
 Options: ~
 - the default for 'commentstring' contains whitespace padding to have
@@ -41641,6 +41642,7 @@ Options: ~
 - New option value for 'fillchars':
 	"trunc"		- configure truncation indicator, 'pummaxwidth'
 	"truncrl"	- like "trunc" but in 'rl' mode, 'pummaxwidth'
+- adjust for GTK3 dropping some mouse cursors 'mouseshape'
 
 Ex commands: ~
 - allow to specify a priority when defining a new sign |:sign-define|
