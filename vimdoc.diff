diff --git a/runtime/doc/fold.txt b/runtime/doc/fold.txt
index cf9208936..b6cb2a440 100644
--- a/runtime/doc/fold.txt
+++ b/runtime/doc/fold.txt
@@ -1,4 +1,4 @@
-*fold.txt*      For Vim version 9.1.  Last change: 2024 Dec 16
+*fold.txt*      For Vim version 9.1.  Last change: 2024 Dec 17
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -106,7 +106,8 @@ The result of foldexpr then determines the fold level as follows:
   "<1", "<2", ..	a fold with this level ends at this line
   ">1", ">2", ..	a fold with this level starts at this line
 
-The result values "=", "s" and "a" are more expensive, please see |fold-expr-slow|.
+The result values "=", "s" and "a" are more expensive, please see
+|fold-expr-slow|.
 
 It is not required to mark the start (end) of a fold with ">1" ("<1"), a fold
 will also start (end) when the fold level is higher (lower) than the fold
@@ -122,7 +123,7 @@ For debugging the 'debug' option can be set to "msg", the error messages will
 be visible then.
 
 If the 'foldexpr' expression starts with s: or |<SID>|, then it is replaced
-with the script ID (|local-function|). Examples: >
+with the script ID (|local-function|).  Examples: >
 		set foldexpr=s:MyFoldExpr()
 		set foldexpr=<SID>SomeFoldExpr()
 <
@@ -146,7 +147,7 @@ end in that line.
 It may happen that folds are not updated properly.  You can use |zx| or |zX|
 to force updating folds.
 
-Minimizing Computational Cost			             *fold-expr-slow*
+MINIMIZING COMPUTATIONAL COST				*fold-expr-slow*
 
 Due to its computational cost, this fold method can make Vim unresponsive,
 especially when the fold level of all lines have to be initially computed.
@@ -154,13 +155,15 @@ Afterwards, after each change, Vim restricts the computation of foldlevels
 to those lines whose fold level was affected by it (and reuses the known
 foldlevels of all the others).
 
-The fold expression should therefore strive to minimize the number of dependent
-lines needed for the computation of a given line: For example, try to avoid the
-"=", "a" and "s" return values, because these will require the evaluation of the
-fold levels on previous lines until an independent fold level is found.
+The fold expression should therefore strive to minimize the number of
+dependent lines needed for the computation of a given line: For example, try
+to avoid the "=", "a" and "s" return values, because these will require the
+evaluation of the fold levels on previous lines until an independent fold
+level is found.
 
-If this proves difficult, the next best thing could be to cache all fold levels
-in a buffer-local variable (b:foldlevels) that is only updated on |b:changedtick|:
+If this proves difficult, the next best thing could be to cache all fold
+levels in a buffer-local variable (b:foldlevels) that is only updated on
+|b:changedtick|:
 >vim
   vim9script
   def MyFoldFunc(): number
@@ -174,8 +177,9 @@ in a buffer-local variable (b:foldlevels) that is only updated on |b:changedtick
   enddef
   set foldexpr=s:MyFoldFunc()
 <
-In above example further speedup was gained by using a precompiled Vim9script
-function without arguments (that must still use v:lnum). See |expr-option-function|.
+In above example further speedup was gained by using a precompiled Vim9 script
+function without arguments (that must still use v:lnum).  See
+|expr-option-function|.
 
 SYNTAX						*fold-syntax*
 
@@ -412,8 +416,8 @@ zX		Undo manually opened and closed folds: re-apply 'foldlevel'.
 		Also forces recomputing folds, like |zx|.
 
 							*zm*
-zm		Fold more: Subtract |v:count1| from 'foldlevel'.  If 'foldlevel' was
-		already zero nothing happens.
+zm		Fold more: Subtract |v:count1| from 'foldlevel'.  If
+		'foldlevel' was already zero nothing happens.
 		'foldenable' will be set.
 
 							*zM*
@@ -477,7 +481,7 @@ zk		Move upwards to the end of the previous fold.  A closed fold
 
 EXECUTING COMMANDS ON FOLDS ~
 
-:[range]foldd[oopen] {cmd}			*:foldd* *:folddo* *:folddoopen*
+:[range]foldd[oopen] {cmd}		*:foldd* *:folddo* *:folddoopen*
 		Execute {cmd} on all lines that are not in a closed fold.
 		When [range] is given, only these lines are used.
 		Each time {cmd} is executed the cursor is positioned on the
@@ -567,7 +571,7 @@ When there is room after the text, it is filled with the character specified
 by 'fillchars'.
 
 If the 'foldtext' expression starts with s: or |<SID>|, then it is replaced
-with the script ID (|local-function|). Examples: >
+with the script ID (|local-function|).  Examples: >
 		set foldtext=s:MyFoldText()
 		set foldtext=<SID>SomeFoldText()
 <
diff --git a/runtime/doc/motion.txt b/runtime/doc/motion.txt
index e5b8151d0..4e57797a5 100644
--- a/runtime/doc/motion.txt
+++ b/runtime/doc/motion.txt
@@ -1,4 +1,4 @@
-*motion.txt*    For Vim version 9.1.  Last change: 2024 Dec 16
+*motion.txt*    For Vim version 9.1.  Last change: 2024 Dec 17
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -125,8 +125,8 @@ Note that when using ":" any motion becomes characterwise exclusive.
 					*inclusive-motion-selection-exclusive*
 When 'selection' is "exclusive", |Visual| mode is active and an inclusive
 motion has been used, the cursor position will be adjusted by another
-character to the right, so that visual selction includes the expected text and
-can be acted upon.
+character to the right, so that the Visual selection includes the expected
+text and can be acted upon.
 
 								*forced-motion*
 FORCING A MOTION TO BE LINEWISE, CHARACTERWISE OR BLOCKWISE
diff --git a/runtime/doc/pi_tutor.txt b/runtime/doc/pi_tutor.txt
index f4f86e87b..590d2e4b4 100644
--- a/runtime/doc/pi_tutor.txt
+++ b/runtime/doc/pi_tutor.txt
@@ -1,4 +1,4 @@
-*pi_tutor.txt*    For Vim version 9.1.  Last change: 2024 Dec 16
+*pi_tutor.txt*    For Vim version 9.1.  Last change: 2024 Dec 17
 
 INTERACTIVE TUTORIALS FOR VIM			 *vim-tutor-mode*
 
@@ -30,7 +30,7 @@ by double-clicking them.
 			language if possible (|v:lang|), e.g. to open the
 			chapter 1 of the Italian tutor, use: >
 
-			:lang it_IT.utf-8
+			:lang it_IT.UTF-8
 			:Tutor
 <
 =============================================================================
diff --git a/runtime/doc/usr_01.txt b/runtime/doc/usr_01.txt
index 70a3f9bcb..556774e14 100644
--- a/runtime/doc/usr_01.txt
+++ b/runtime/doc/usr_01.txt
@@ -1,4 +1,4 @@
-*usr_01.txt*	For Vim version 9.1.  Last change: 2024 Dec 16
+*usr_01.txt*	For Vim version 9.1.  Last change: 2024 Dec 17
 
 		     VIM USER MANUAL - by Bram Moolenaar
 
@@ -117,8 +117,9 @@ On Unix, if Vim has been properly installed, you can start it from the shell:
 >
 	vimtutor
 
-On MS-Windows you can find it in the Program/Vim menu.  Or execute
-vimtutor.bat in the $VIMRUNTIME directory.
+On MS-Windows you can find it in the "Program/Vim 9.1" menu.  Or execute
+vimtutor.bat from the installation directory (You can use `:echo $VIMRUNTIME`
+from within Vim to find this directory).
 
 This will make a copy of chapter 1 tutor file, so that you can edit it without
 the risk of damaging the original.  To continue with chapter 2, you can use
