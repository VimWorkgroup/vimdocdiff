diff --git a/runtime/doc/builtin.txt b/runtime/doc/builtin.txt
index 9f91f47d4..55a0731a8 100644
--- a/runtime/doc/builtin.txt
+++ b/runtime/doc/builtin.txt
@@ -1,4 +1,4 @@
-*builtin.txt*	For Vim version 9.1.  Last change: 2025 Apr 24
+*builtin.txt*	For Vim version 9.1.  Last change: 2025 Apr 27
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -2034,8 +2034,11 @@ complete_info([{what}])				*complete_info()*
 		Return type: dict<any>
 
 complete_match([{lnum}, {col}])			*complete_match()*
-		Returns a List of matches found according to the 'isexpand'
-		option. Each match is represented as a List containing
+		Searches backward from the given position and returns a List
+		of matches according to the 'isexpand' option. When no
+		arguments are provided, uses the current cursor position.
+
+		Each match is represented as a List containing
 		[startcol, trigger_text] where:
 		- startcol: column position where completion should start,
 		  or -1 if no trigger position is found. For multi-character
@@ -2047,9 +2050,6 @@ complete_match([{lnum}, {col}])			*complete_match()*
 		When 'isexpand' is empty, uses the 'iskeyword' pattern
 		"\k\+$" to find the start of the current keyword.
 
-		When no arguments are provided, uses the current cursor
-		position.
-
 		Examples: >
 	set isexpand=.,->,/,/*,abc
 	func CustomComplete()
diff --git a/runtime/doc/filetype.txt b/runtime/doc/filetype.txt
index 018dbcaf1..fa9506da2 100644
--- a/runtime/doc/filetype.txt
+++ b/runtime/doc/filetype.txt
@@ -1,4 +1,4 @@
-*filetype.txt*	For Vim version 9.1.  Last change: 2025 Apr 22
+*filetype.txt*	For Vim version 9.1.  Last change: 2025 Apr 27
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -269,7 +269,7 @@ D. If your filetype can only be detected by inspecting the contents of the
       item of the 'runtimepath' option.  Example for Unix: >
 	:!mkdir ~/.vim
 <
-   2. Create a vim script file for doing this.  Example: >
+   2. Create a Vim script file for doing this.  Example: >
 	if did_filetype()	" filetype already set..
 	  finish		" ..don't do these checks
 	endif
diff --git a/runtime/doc/if_perl.txt b/runtime/doc/if_perl.txt
index 86edd05a0..85e5a90e5 100644
--- a/runtime/doc/if_perl.txt
+++ b/runtime/doc/if_perl.txt
@@ -1,4 +1,4 @@
-*if_perl.txt*   For Vim version 9.1.  Last change: 2023 May 14
+*if_perl.txt*   For Vim version 9.1.  Last change: 2025 Apr 27
 
 
 		  VIM REFERENCE MANUAL    by Sven Verdoolaege
@@ -74,7 +74,7 @@ The ActiveState one should work, Strawberry Perl is a good alternative.
 			|script-here|.
 
 
-Example vim script: >
+Example Vim script: >
 
 	function! WhitePearl()
 	perl << EOF
diff --git a/runtime/doc/options.txt b/runtime/doc/options.txt
index 03a6a6c5c..255b9d50f 100644
--- a/runtime/doc/options.txt
+++ b/runtime/doc/options.txt
@@ -1,4 +1,4 @@
-*options.txt*	For Vim version 9.1.  Last change: 2025 Apr 24
+*options.txt*	For Vim version 9.1.  Last change: 2025 Apr 27
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -4996,6 +4996,10 @@ A jump table for the options with a short description can be found at |Q_op|.
 	Note: Use "\\," to add a literal comma as trigger character, see
 	|option-backslash|.
 
+	Examples: >
+		set isexpand=.,->,/*,\\,
+<
+
 			*'insertmode'* *'im'* *'noinsertmode'* *'noim'*
 'insertmode' 'im'	boolean	(default off)
 			global
diff --git a/runtime/doc/pi_getscript.txt b/runtime/doc/pi_getscript.txt
index 20caab1e1..e549ea641 100644
--- a/runtime/doc/pi_getscript.txt
+++ b/runtime/doc/pi_getscript.txt
@@ -1,4 +1,4 @@
-*pi_getscript.txt*  For Vim version 9.1.  Last change: 2025 Mar 15
+*pi_getscript.txt*  For Vim version 9.1.  Last change: 2025 Apr 27
 >
 		GETSCRIPT REFERENCE MANUAL  by Charles E. Campbell
 <
@@ -156,7 +156,7 @@ may have.  As an example, consider: >
 
 	" GetLatestVimScripts: 884  1 :AutoInstall: AutoAlign.vim
 
-This comment line tells getscript.vim to check vimscript #884 and that the
+This comment line tells getscript.vim to check Vim script #884 and that the
 script is automatically installable.  Getscript will also use this line to
 help build the GetLatestVimScripts.dat file, by including a line such as: >
 
diff --git a/runtime/doc/pi_netrw.txt b/runtime/doc/pi_netrw.txt
index 51688b705..00799911e 100644
--- a/runtime/doc/pi_netrw.txt
+++ b/runtime/doc/pi_netrw.txt
@@ -460,7 +460,7 @@ file using root-relative paths, use the full path:
 ==============================================================================
 4. Network-Oriented File Transfer			*netrw-xfer* {{{1
 
-Network-oriented file transfer under Vim is implemented by a vim script
+Network-oriented file transfer under Vim is implemented by a Vim script
 (<netrw.vim>) using plugin techniques.  It currently supports both reading and
 writing across networks using rcp, scp, ftp or ftp+<.netrc>, scp, fetch,
 dav/cadaver, rsync, or sftp.
diff --git a/runtime/doc/tagsrch.txt b/runtime/doc/tagsrch.txt
index 858309a28..132414368 100644
--- a/runtime/doc/tagsrch.txt
+++ b/runtime/doc/tagsrch.txt
@@ -1,4 +1,4 @@
-*tagsrch.txt*   For Vim version 9.1.  Last change: 2024 Aug 01
+*tagsrch.txt*   For Vim version 9.1.  Last change: 2025 Apr 26
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -914,7 +914,7 @@ Currently up to three flags may be passed to the tag function:
 	        (mnemonic: the tag function may use the context around the
 		cursor to perform a better job of generating the tag list.)
   'i'		In Insert mode, the user was completing a tag (with
-		|i_CTRL-X_CTRL-]| or 'completeopt' contains `t`).
+		|i_CTRL-X_CTRL-]| or 'complete' contains "`t`" or "`]`").
   'r'		The first argument to tagfunc should be interpreted as a
 		|pattern| (see |tag-regexp|), such as when using: >
 		  :tag /pat
diff --git a/runtime/doc/usr_41.txt b/runtime/doc/usr_41.txt
index a22b6f798..ffa6fcb7a 100644
--- a/runtime/doc/usr_41.txt
+++ b/runtime/doc/usr_41.txt
@@ -1,4 +1,4 @@
-*usr_41.txt*	For Vim version 9.1.  Last change: 2025 Apr 24
+*usr_41.txt*	For Vim version 9.1.  Last change: 2025 Apr 27
 
 		     VIM USER MANUAL - by Bram Moolenaar
 
@@ -35,8 +35,10 @@ like for example .vim files or configuration files like .vimrc and .gvimrc.
 These scripts may define functions, commands and settings that Vim uses to
 customize and extend its behavior.
 
-With a slight abuse of nomenclature, we will use "Vim script" to refer to the
-Vim scripting language throughout this documentation.  This shorthand helps to
+						*vim-script-notation*
+The correct notation is "Vim script" (or "Vim9 script" when refering to the
+new Vim9 language |Vim9-script|), so we will use "Vim script" to refer to the
+Vim scripting language throughout this documentation. This shorthand helps to
 streamline explanations and discussions about scripting with Vim.
 
 A Vim plugin is a collection of one or more Vim scripts, along with additional
diff --git a/runtime/doc/vim9.txt b/runtime/doc/vim9.txt
index ba72358d1..0dae57deb 100644
--- a/runtime/doc/vim9.txt
+++ b/runtime/doc/vim9.txt
@@ -1,4 +1,4 @@
-*vim9.txt*	For Vim version 9.1.  Last change: 2025 Apr 18
+*vim9.txt*	For Vim version 9.1.  Last change: 2025 Apr 27
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -2043,7 +2043,7 @@ The script name after `import` can be:
 
 If the name does not end in ".vim" then the use of "as name" is required.
 
-Once a vim9 script file has been imported, the result is cached and used the
+Once a Vim9 script file has been imported, the result is cached and used the
 next time the same script is imported.  It will not be read again.
 
 It is not allowed to import the same script twice, also when using two
@@ -2056,7 +2056,7 @@ line, there can be no line break: >
 	echo that
 		.name  # Error!
 <						*import-map*
-When you've imported a function from one script into a vim9 script you can
+When you've imported a function from one script into a Vim9 script you can
 refer to the imported function in a mapping by prefixing it with |<SID>|: >
 	noremap <silent> ,a :call <SID>name.Function()<CR>
 
