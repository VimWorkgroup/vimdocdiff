diff --git a/runtime/doc/autocmd.txt b/runtime/doc/autocmd.txt
index 8532fc956..372d1acbc 100644
--- a/runtime/doc/autocmd.txt
+++ b/runtime/doc/autocmd.txt
@@ -387,6 +387,7 @@ Name			triggered by ~
 |TabNew|		after creating a new tab page
 |WinClosed|		after closing a window
 |TabClosed|		after closing a tab page
+|TabClosedPre|		before closing a tab page
 |WinEnter|		after entering another window
 |WinLeave|		before leaving a window
 |TabEnter|		after entering another tab page
@@ -1232,6 +1233,10 @@ Syntax				When the 'syntax' option has been set.  The
 				See |:syn-on|.
 							*TabClosed*
 TabClosed			After closing a tab page.
+							*TabClosedPre*
+TabClosedPre			Before closing a tab page.  The window layout
+				is locked, thus opening and closing of windows
+				is prohibited.
 							*TabEnter*
 TabEnter			Just after entering a tab page. |tab-page|
 				After triggering the WinEnter and before
diff --git a/runtime/doc/filetype.txt b/runtime/doc/filetype.txt
index 8a7f0c538..ac8d8f84b 100644
--- a/runtime/doc/filetype.txt
+++ b/runtime/doc/filetype.txt
@@ -1,4 +1,4 @@
-*filetype.txt*	For Vim version 9.1.  Last change: 2025 Mar 10
+*filetype.txt*	For Vim version 9.1.  Last change: 2025 Mar 13
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -640,6 +640,24 @@ One command, :DiffGitCached, is provided to show a diff of the current commit
 in the preview window.  It is equivalent to calling "git diff --cached" plus
 any arguments given to the command.
 
+GIT REBASE						*ft-gitrebase-plugin*
+
+The gitrebase filetype defines the following buffer-local commands, to help
+with interactive `git rebase`: >
+
+	:Drop   " to discard this commit
+	:Edit   " to stop for editing this commit
+	:Fixup  " to squash (but discard the message) into the previous one
+	:Pick   " to pick this commit (the cursor is on)
+	:Reword " to pick this commit, but change the commit message
+	:Squash " to squash this commit into the previous one
+
+In addition, the following comamnd can be used to cycle between the different
+possibilities: >
+
+	:Cycle  " to cycle between the previous commands
+<
+For details, see `git-rebase --help`.
 
 GO							*ft-go-plugin*
 
diff --git a/runtime/doc/options.txt b/runtime/doc/options.txt
index c2ad86e0e..525a3a58b 100644
--- a/runtime/doc/options.txt
+++ b/runtime/doc/options.txt
@@ -1,4 +1,4 @@
-*options.txt*	For Vim version 9.1.  Last change: 2025 Mar 12
+*options.txt*	For Vim version 9.1.  Last change: 2025 Mar 13
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -2107,23 +2107,24 @@ A jump table for the options with a short description can be found at |Q_op|.
 						*'completefuzzycollect'* *'cfc'*
 'completefuzzycollect' 'cfc'	string	(default: empty)
 				global
-	A comma-separated list of option enables fuzzy collection for specific
-	|ins-completion| modes, affecting how items are gathered during
-	completion. When set, fuzzy matching is used to find completion
-	candidates instead of the standard prefix-based matching. This option
-	can contain the following values are:
+	A comma-separated list of strings to enable fuzzy collection for
+	specific |ins-completion| modes, affecting how matches are gathered
+	during completion.  For specified modes, fuzzy matching is used to
+	find completion candidates instead of the standard prefix-based
+	matching.  This option can contain the following values:
 
-	keyword		keywords in the current file |i_CTRL-X_CTRL-N|
-			keywords with the ".", "w", "b", "u", "U" and
-			"k{dict}" flags in 'complete'. |i_CTRL-N| |i_CTRL-P|
+	keyword		keywords in the current file	|i_CTRL-X_CTRL-N|
+			keywords with flags ".", "w",	|i_CTRL-N| |i_CTRL-P|
+			"b", "u", "U" and "k{dict}" in 'complete'
+			keywords in 'dictionary'	|i_CTRL-X_CTRL-K|
 
-	files		file names  |i_CTRL-X_CTRL-F|
+	files		file names			|i_CTRL-X_CTRL-F|
 
-	whole_line	whole lines |i_CTRL-X_CTRL-L|
+	whole_line	whole lines			|i_CTRL-X_CTRL-L|
 
-	When used with 'completeopt' "longest" option, fuzzy collection can
-	identify the longest common string among the best fuzzy matches and
-	automatically insert it.
+	When used the 'completeopt' "longest" option value, fuzzy collection
+	can identify the longest common string among the best fuzzy matches
+	and insert it automatically.
 
 						*'completeitemalign'* *'cia'*
 'completeitemalign' 'cia' string (default: "abbr,kind,menu")
diff --git a/runtime/doc/version9.txt b/runtime/doc/version9.txt
index f12bcd4c3..6d41e342f 100644
--- a/runtime/doc/version9.txt
+++ b/runtime/doc/version9.txt
@@ -1,4 +1,4 @@
-*version9.txt*  For Vim version 9.1.  Last change: 2025 Mar 06
+*version9.txt*  For Vim version 9.1.  Last change: 2025 Mar 13
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -41687,6 +41687,7 @@ Autocommands: ~
 |CursorMovedC|		after the cursor was moved in the command-line
 |KeyInputPre|		before processing any key event in any mode
 |SessionWritePost|	after writing the session file |:mksession|
+|TabClosedPre|		before closing a |tabpage|.
 |TermResponseAll|	after the terminal response to |t_RV| and others is
 			received
 |WinNewPre|		before creating a new window
