diff --git a/runtime/doc/builtin.txt b/runtime/doc/builtin.txt
index 8f9c7baa2..60dbb4799 100644
--- a/runtime/doc/builtin.txt
+++ b/runtime/doc/builtin.txt
@@ -1,4 +1,4 @@
-*builtin.txt*	For Vim version 9.1.  Last change: 2025 Jul 03
+*builtin.txt*	For Vim version 9.1.  Last change: 2025 Jul 06
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -238,8 +238,8 @@ getcharsearch()			Dict	last character search
 getcharstr([{expr} [, {opts}]])	String	get one character from the user
 getcmdcomplpat()		String	return the completion pattern of the
 					current command-line completion
-getcmdcompltype({pat})		String	return the type of command-line
-					completion
+getcmdcompltype()		String	return the type of the current
+					command-line completion
 getcmdline()			String	return the current command-line input
 getcmdpos()			Number	return cursor position in command-line
 getcmdprompt()			String	return the current command-line prompt
@@ -249,6 +249,8 @@ getcmdtype()			String	return current command-line type
 getcmdwintype()			String	return current command-line window type
 getcompletion({pat}, {type} [, {filtered}])
 				List	list of cmdline completion matches
+getcompletiontype({pat})	String	return the type of the command-line
+					completion using {pat}
 getcurpos([{winnr}])		List	position of the cursor
 getcursorcharpos([{winnr}])	List	character position of the cursor
 getcwd([{winnr} [, {tabnr}]])	String	get the current working directory
@@ -4201,16 +4203,18 @@ getcmdcomplpat()					*getcmdcomplpat()*
 		Return type: |String|
 
 
-getcmdcompltype([{pat}])				*getcmdcompltype()*
-		Return the type of command-line completion using {pat}.
-		If {pat} is omited, only works when the command line is being
-		edited, thus requires use of |c_CTRL-\_e| or |c_CTRL-R_=|.
-
+getcmdcompltype()					*getcmdcompltype()*
+		Return the type of the current command-line completion.
+		Only works when the command line is being edited, thus
+		requires use of |c_CTRL-\_e| or |c_CTRL-R_=|.
 		See |:command-completion| for the return string.
 		Also see |getcmdtype()|, |setcmdpos()|, |getcmdline()|,
 		|getcmdprompt()|, |getcmdcomplpat()| and |setcmdline()|.
 		Returns an empty string when completion is not defined.
 
+		To get the type of the command-line completion for a specified
+		string, use |getcompletiontype()|.
+
 		Return type: |String|
 
 
@@ -4369,6 +4373,15 @@ getcompletion({pat}, {type} [, {filtered}])		*getcompletion()*
 <
 		Return type: list<string>
 
+getcompletiontype({pat})				*getcompletiontype()*
+		Return the type of the command-line completion using {pat}.
+		When no corresponding completion type is found, an empty
+		string is returned.
+		To get the current command-line completion type, use
+		|getcmdcompltype()|.
+
+		Return type: |String|
+
 							*getcurpos()*
 getcurpos([{winid}])
 		Get the position of the cursor.  This is like getpos('.'), but
diff --git a/runtime/doc/helphelp.txt b/runtime/doc/helphelp.txt
index c49a4d50b..f3c5293b7 100644
--- a/runtime/doc/helphelp.txt
+++ b/runtime/doc/helphelp.txt
@@ -1,4 +1,4 @@
-*helphelp.txt*	For Vim version 9.1.  Last change: 2025 Jun 03
+*helphelp.txt*	For Vim version 9.1.  Last change: 2025 Jul 07
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -410,6 +410,24 @@ and 'tabstop' options and the 'filetype' to "help".  Never set a global option
 in such a modeline, that can have undesired consequences.
 
 
+STYLE
+
+If your Vim has 'modeline' enabled, Vim should follow the preferred style
+automatically when editing built-in help files.
+
+Vim help files should be formatted for a 'textwidth' of 78 characters, so they
+look good in a typical 80 x 24 terminal window.
+
+Use two spaces between the final dot of a sentence of the first letter of the
+next sentence.  Like this.
+
+Use tab characters for aligning content, with a 'tabstop' setting of 8.
+This also helps reduce the file size.
+
+Always use |:retab| after you have finished editing.  Don't blindly use
+|:retab!|, always review what will be changed to avoid unwanted changes.
+
+
 TAGS
 
 To define a help tag, place the name between asterisks ("*tag-name*").  The
diff --git a/runtime/doc/insert.txt b/runtime/doc/insert.txt
index da028e820..df0cff978 100644
--- a/runtime/doc/insert.txt
+++ b/runtime/doc/insert.txt
@@ -1,4 +1,4 @@
-*insert.txt*    For Vim version 9.1.  Last change: 2025 Jun 11
+*insert.txt*    For Vim version 9.1.  Last change: 2025 Jul 05
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -648,7 +648,7 @@ Completion can be done for:
 10. User defined completion				|i_CTRL-X_CTRL-U|
 11. omni completion					|i_CTRL-X_CTRL-O|
 12. Spelling suggestions				|i_CTRL-X_s|
-13. keywords in 'complete'				|i_CTRL-N| |i_CTRL-P|
+13. completions from 'complete'				|i_CTRL-N| |i_CTRL-P|
 14. contents from registers				|i_CTRL-X_CTRL-R|
 
 Additionally, |i_CTRL-X_CTRL-Z| stops completion without changing the text.
@@ -1103,25 +1103,23 @@ CTRL-X s		Locate the word in front of the cursor and find the
 			previous one.
 
 
-Completing keywords from different sources		*compl-generic*
+Completing from different sources			*compl-generic*
 
 							*i_CTRL-N*
-CTRL-N			Find next match for words that start with the
-			keyword in front of the cursor, looking in places
-			specified with the 'complete' option.  The found
-			keyword is inserted in front of the cursor.
+CTRL-N			Find the next match for a word ending at the cursor,
+			using the sources specified in the 'complete' option.
+			All sources complete from keywords, except functions,
+			which may complete from non-keyword.  The matched
+			text is inserted before the cursor.
 
 							*i_CTRL-P*
-CTRL-P			Find previous match for words that start with the
-			keyword in front of the cursor, looking in places
-			specified with the 'complete' option.  The found
-			keyword is inserted in front of the cursor.
+CTRL-P			Same as CTRL-N, but find the previous match.
 
-	CTRL-N		Search forward for next matching keyword.  This
-			keyword replaces the previous matching keyword.
+	CTRL-N		Search forward through the matches and insert the
+			next one.
 
-	CTRL-P		Search backwards for next matching keyword.  This
-			keyword replaces the previous matching keyword.
+	CTRL-P		Search backward through the matches and insert the
+			previous one.
 
 	CTRL-X CTRL-N or
 	CTRL-X CTRL-P	Further use of CTRL-X CTRL-N or CTRL-X CTRL-P will
diff --git a/runtime/doc/options.txt b/runtime/doc/options.txt
index cf064e17f..e71f0d635 100644
--- a/runtime/doc/options.txt
+++ b/runtime/doc/options.txt
@@ -1,4 +1,4 @@
-*options.txt*	For Vim version 9.1.  Last change: 2025 Jul 03
+*options.txt*	For Vim version 9.1.  Last change: 2025 Jul 08
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -2123,15 +2123,12 @@ A jump table for the options with a short description can be found at |Q_op|.
 		name of a function or a |Funcref|.  For |Funcref| values,
 		spaces must be escaped with a backslash ('\'), and commas with
 		double backslashes ('\\') (see |option-backslash|).
+		Unlike other sources, functions can provide completions starting
+		from a non-keyword character before the cursor, and their
+		start position for replacing text may differ from other sources.
 		If the Dict returned by the {func} includes {"refresh": "always"},
 		the function will be invoked again whenever the leading text
 		changes.
-		Completion matches are always inserted at the keyword
-		boundary, regardless of the column returned by {func} when
-		a:findstart is 1.  This ensures compatibility with other
-		completion sources.
-		To make further modifications to the inserted text, {func}
-		can make use of |CompleteDonePre|.
 		If generating matches is potentially slow, |complete_check()|
 		should be used to avoid blocking and preserve editor
 		responsiveness.
@@ -9762,6 +9759,7 @@ A jump table for the options with a short description can be found at |Q_op|.
 <	'wildchar' also enables completion in search pattern contexts such as
 	|/|, |?|, |:s|, |:g|, |:v|, and |:vim|.  To insert a literal <Tab>
 	instead of triggering completion, type <C-V><Tab> or "\t".
+	See also |'wildoptions'|.
 	NOTE: This option is set to the Vi default value when 'compatible' is
 	set and to the Vim default value when 'compatible' is reset.
 
@@ -9929,6 +9927,20 @@ A jump table for the options with a short description can be found at |Q_op|.
 	A list of words that change how |cmdline-completion| is done.
 
 	The following values are supported:
+	  exacttext	When this flag is present, search pattern completion
+			(e.g., in |/|, |?|, |:s|, |:g|, |:v|, and |:vim|)
+			shows exact buffer text as menu items, without
+			preserving regex artifacts like position
+			anchors (e.g., |/\<|).  This provides more intuitive
+			menu items that match the actual buffer text.
+			However, searches may be less accurate since the
+			pattern is not preserved exactly.
+			By default, Vim preserves the typed pattern (with
+			anchors) and appends the matched word.  This preserves
+			search correctness, especially when using regular
+			expressions or with 'smartcase' enabled.  However, the
+			case of the appended matched word may not exactly
+			match the case of the word in the buffer.
 	  fuzzy		Use |fuzzy-matching| to find completion matches. When
 			this value is specified, wildcard expansion will not
 			be used for completion.  The matches will be sorted by
diff --git a/runtime/doc/pattern.txt b/runtime/doc/pattern.txt
index 857a3e648..9af0c24f4 100644
--- a/runtime/doc/pattern.txt
+++ b/runtime/doc/pattern.txt
@@ -1,4 +1,4 @@
-*pattern.txt*   For Vim version 9.1.  Last change: 2025 Mar 28
+*pattern.txt*   For Vim version 9.1.  Last change: 2025 Jul 06
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -183,6 +183,16 @@ matches in every line with `:vglobal`.
 For the |:s| command the "e" flag can be used to avoid the error message
 |:s_flags|.
 
+					*search-options*
+The following options affect how a search is performed in Vim:
+    'hlsearch'		highlight matches
+    'ignorecase'	ignore case when searching
+    'imsearch'		use |IME| when entering the search pattern
+    'incsearch'		show matches incrementally as the pattern is typed
+    'shortmess'		suppress messages |shm-s|; show search count |shm-S|
+    'smartcase'		override 'ignorecase' if pattern contains uppercase
+    'wrapscan'		continue searching from the start of the file
+
 					*search-offset* *{offset}*
 These commands search for the specified pattern.  With "/" and "?" an
 additional offset may be given.  There are two types of offsets: line offsets
diff --git a/runtime/doc/terminal.txt b/runtime/doc/terminal.txt
index 1d502abc9..2ca2d4be6 100644
--- a/runtime/doc/terminal.txt
+++ b/runtime/doc/terminal.txt
@@ -1,4 +1,4 @@
-*terminal.txt*	For Vim version 9.1.  Last change: 2025 Feb 22
+*terminal.txt*	For Vim version 9.1.  Last change: 2025 Jul 08
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -1711,6 +1711,9 @@ than 99 will be displayed as "9+".
 
 If you want to customize the breakpoint signs to show `>>` in the signcolumn: >
 	let g:termdebug_config['sign'] = '>>'
+You can also specify individual signs for the first several breakpoints: >
+	let g:termdebug_config['signs'] = ['>1', '>2', '>3', '>4', '>5', '>6', '>7', '>8', '>9']
+	let g:termdebug_config['sign'] = '>>'
 If you would like to use decimal (base 10) breakpoint signs: >
 	let g:termdebug_config['sign_decimal'] = 1
 If the variable g:termdebug_config does not yet exist, you can use: >
diff --git a/runtime/doc/uganda.txt b/runtime/doc/uganda.txt
index 7f7a6660d..6f432e66a 100644
--- a/runtime/doc/uganda.txt
+++ b/runtime/doc/uganda.txt
@@ -1,4 +1,4 @@
-*uganda.txt*    For Vim version 9.1.  Last change: 2025 May 25
+*uganda.txt*    For Vim version 9.1.  Last change: 2025 Jul 08
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -21,6 +21,13 @@ Uganda anyway.
 The Open Publication License applies to the Vim documentation, see
 |manual-copyright|.
 
+The icons used for the toolbar in the Win32 GUI are from the "Farm-Fresh Web
+Icons" set.  These icons are licensed under the Creative Commons Attribution
+3.0 License and were created by FatCow Web Hosting.  They were previously
+available at http://www.fatcow.com/free-icons and are still available at:
+https://www.iconarchive.com/show/farm-fresh-icons-by-fatcow.1.html
+
+
 === begin of license ===
 
 VIM LICENSE
diff --git a/runtime/doc/usr_27.txt b/runtime/doc/usr_27.txt
index bb5b5657a..75fc7ea25 100644
--- a/runtime/doc/usr_27.txt
+++ b/runtime/doc/usr_27.txt
@@ -1,4 +1,4 @@
-*usr_27.txt*	For Vim version 9.1.  Last change: 2019 Jul 14
+*usr_27.txt*	For Vim version 9.1.  Last change: 2025 Jul 06
 
 		     VIM USER MANUAL - by Bram Moolenaar
 
@@ -8,6 +8,7 @@
 In chapter 3 a few simple search patterns were mentioned |03.9|.  Vim can do
 much more complex searches.  This chapter explains the most often used ones.
 A detailed specification can be found here: |pattern|
+Options affecting how search is done can be found here: |search-options|
 
 |27.1|	Ignoring case
 |27.2|	Wrapping around the file end
diff --git a/runtime/doc/usr_41.txt b/runtime/doc/usr_41.txt
index 9b8cdc2be..02d58f0d8 100644
--- a/runtime/doc/usr_41.txt
+++ b/runtime/doc/usr_41.txt
@@ -1,4 +1,4 @@
-*usr_41.txt*	For Vim version 9.1.  Last change: 2025 Jul 03
+*usr_41.txt*	For Vim version 9.1.  Last change: 2025 Jul 05
 
 		     VIM USER MANUAL - by Bram Moolenaar
 
@@ -1100,7 +1100,8 @@ Buffers, windows and the argument list:
 Command line:					*command-line-functions*
 	getcmdcomplpat()	get completion pattern of the current command
 				line
-	getcmdcompltype()	get the type of the command line completion
+	getcmdcompltype()	get the type of the current command line
+				completion
 	getcmdline()		get the current command line input
 	getcmdprompt()		get the current command line prompt
 	getcmdpos()		get position of the cursor in the command line
@@ -1111,6 +1112,8 @@ Command line:					*command-line-functions*
 	getcmdtype()		return the current command-line type
 	getcmdwintype()		return the current command-line window type
 	getcompletion()		list of command-line completion matches
+	getcompletiontype()	get the type of the command-line completion
+				for specified string
 	fullcommand()		get full command name
 	cmdcomplete_info()	get command-line completion information
 
diff --git a/runtime/doc/version9.txt b/runtime/doc/version9.txt
index 75d14011a..3566e452e 100644
--- a/runtime/doc/version9.txt
+++ b/runtime/doc/version9.txt
@@ -1,4 +1,4 @@
-*version9.txt*  For Vim version 9.1.  Last change: 2025 Jul 03
+*version9.txt*  For Vim version 9.1.  Last change: 2025 Jul 08
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -41553,8 +41553,12 @@ Enum support for Vim9 script |:enum|
 
 Support for protected _new() method
 
+Support for compiling all the methods in a Vim9 class using |:defcompile|.
+
 Add support for object<{type}> as variable data type |vim9-types|
 
+Support for the |Tuple| data type in Vim script and Vim9 script.
+
 Diff mode ~
 ---------
 Include the "linematch" algorithm for the 'diffopt' setting.  This aligns
@@ -41565,29 +41569,70 @@ Improve the diff highlighting for changes within a line.  Configurable using
 the "inline" sub option value for the 'diffopt' setting, with "inline:simple"
 being added to the default "diffopt" value (but this does not change how diff
 mode works).
+
+Completion~
+----------
+- New Insert-mode completion: |i_CTRL-X_CTRL-R| to complete words from
+  registers.
+- Completion in search contexts using |/|, |?|, |:g|, |:v| and |:vimgrep|
+  commands using 'wildchar'
+- ":filetype" command completion and the "filetypecmd" completion type for
+  |getcompletion()| have been included.
+- Support for command-line completion of 'keymap' option values.
+- Support for |fuzzy-matching| during |ins-completion| with the "fuzzy"
+  values of the 'completeopt' setting.
+- allow to complete shell commands and files using the new shellcmdline
+  completion type using |:command-complete| and |getcmdcomplpat()|
+- New option value for 'wildmode':
+	"noselect"	- do not auto select an entry in the wildmenu
+	"exacttext"	- show exact matches in wildmenu with search
+			  completion
+- New flags for 'complete':
+	"F{func}"	- complete using given function
+	"F"		- complete using 'completefunc'
+	"o"		- complete using 'omnifunc'
+- New option value for 'completeopt':
+	"nosort"	- do not sort completion results
+	"preinsert"	- highlight to be inserted values
+	"nearest"	- sort completion results by distance to cursor
+
+Platform specific~
+-----------------
+Support for Wayland UI and support for the Wayland clipboard has been added.
+
+Support for the XDG Desktop Specification |xdg-base-dir| has been added and
+the environment variable |$MYVIMDIR| is set to the users personal runtime
+directory ($HOME/.vim or $HOME/.config/vim on Linux, $HOME/vimfiles on
+Windows).
+
+Python3 support in OpenVMS is now available.
+
+The Win32 GUI comes with better toolbar icons.
 							*new-other-9.2*
 Other new features ~
 ------------------
-The new packages |package-comment|, |package-nohlsearch| and |package-hlyank|
-are included.
+Support for Super key mappings in GTK using <D-Key>.
 
-Support for Wayland UI and support for the Wayland clipboard
+The new packages |package-comment|, |package-nohlsearch|, |package-hlyank| and
+|help-TOC| are included.
 
-Support for the XDG Desktop Specification |xdg-base-dir|
+An interactive tutor plugin has been included |vim-tutor-mode| and can be
+started via |:Tutor|.
 
 Support for translating messages in Vim script plugins using the |gettext()|
-and |bindtextdomain()| functions.
+and |bindtextdomain()| functions was included.
 
 Support highlighting the matched text and the completion kind for insert-mode
 completion and command-line completion in |ins-completion-menu|, see
-|complete-items|
+|complete-items|.
 
-Support for the |Tuple| data type in Vim script and Vim9 script.
+A new vertical |tabpanel| window has been included which is a vertical
+'tabline'.
 
-Support for a vertical |tabpanel| window similar to the 'tabline'.
+The |dist#vim9#Launch()| and |dist#vim9#Open()| functions have been added to
+the |vim-script-library| and decoupled from |netrw|.
 
-New Insert-mode completion: |i_CTRL-X_CTRL-R| to complete words from
-registers.
+The new digraph "APPROACHES THE LIMIT" using ".=" has been added
 
 							*changed-9.2*
 Changed~
@@ -41602,40 +41647,23 @@ Default values: ~
   increased to 12pt to accommodate modern high-dpi monitors
 - the default value of the 'keyprotocol' option has been updated and support
   for the ghostty terminal emulator (using kitty protocol) has been added
+- Improved visual highlighting |hl-Visual|
 
 Completion: ~
 - allow to complete directories from 'cdpath' for |:cd| and similar commands,
   add the "cd_in_path" completion type for e.g. |:command-complete| and
   |getcompletion()|
-- |getcompletion()| now accepts a pat and returns the completion type for the
-  {pat} argument
-- allow to complete shell commands and files using the new shellcmdline
-  completion type using |:command-complete| and |getcmdcomplpat()|
 - allow to specify additional attributes in the completion menu (allows to
   mark deprecated attributes from LSP server) |complete-items|
 - the completed word and completion type are provided when handling the
   |CompleteDone| autocommand in the |v:event| dictionary
 - |complete_info()| returns the list of matches shown in the poppu menu via
   the "matches" key
-- New option value for 'completeopt':
-	"nosort"	- do not sort completion results
-	"preinsert"	- highlight to be inserted values
-	"nearest"	- sort completion results by distance to cursor
 - handle multi-line completion items as expected
 - improved commandline completion for the |:hi| command
-- New option value for 'wildmode':
-	"noselect"	- do not auto select an entry in the wildmenu
-- New flags for 'complete':
-	"F{func}"	- complete using given function
-	"F"		- complete using 'completefunc'
-	"o"		- complete using 'omnifunc'
 - allow to limit matches for the 'complete' sources by using the
   "{flag}^<limit>" notation
-- add ":filetype" command completion
-- add "filetypecmd" completion type for |getcompletion()|
 - 'smartcase' applies to completion filtering
-- 'wildchar' enables completion in search contexts using |/|, |?|, |:g|, |:v|
-  and |:vimgrep| commands
 
 Options: ~
 - the default for 'commentstring' contains whitespace padding to have
@@ -41682,13 +41710,7 @@ Others: ~
   (and apply proper case folding)
 - the putty terminal is detected using an |TermResponse| autocommand in
   |defaults.vim| and Vim switches to a dark background
-- the |help-TOC| package is included to ease navigating the documentation.
-- an interactive tutor plugin has been included |vim-tutor-mode|, can be
-  started via |:Tutor|
 - improve the |vimtutor| and add a second chapter for more advanced tips
-- add |dist#vim9#Launch()| and |dist#vim9#Open()| to the |vim-script-library|
-  and decouple it from |netrw|
-- new digraph "APPROACHES THE LIMIT" using ".="
 - |CTRL-C| always closes the active |popup-window|.
 - the configure script will favor using GTK3 over GTK2 when auto-detecting the
   gui toolkit
@@ -41713,6 +41735,7 @@ Functions: ~
 |getcellpixels()|	get List of terminal cell pixel size
 |getcmdcomplpat()|	Shell command line completion
 |getcmdprompt()|	get prompt for input()/confirm()
+|getcompletiontype()|	get command-line completion type
 |getregion()|		get a region of text from a buffer
 |getregionpos()|	get a list of positions for a region
 |getstacktrace()|	get current stack trace of Vim scripts
@@ -41793,26 +41816,6 @@ INCOMPATIBLE CHANGES					*incompatible-9.2*
 Improved/Different MS-Windows mapping support
 |w32-experimental-keycode-trans-strategy|
 
-==============================================================================
-IMPROVEMENTS						*improvements-9.2*
-
-Support for command-line completion of 'keymap' option values.
-
-Support for compiling all the methods in a Vim9 class using |:defcompile|.
-
-Support for Super key mappings in GTK using <D-Key>.
-
-Improved visual highlighting.
-
-Python3 support in OpenVMS.
-
-Support for |fuzzy-matching| during |ins-completion| with the "fuzzy"
-values of the 'completeopt' setting
-
-The environment variable |$MYVIMDIR| is set to the users personal runtime
-directory ($HOME/.vim or $HOME/.config/vim on Linux, $HOME/vimfiles
-on Windows)
-
 ==============================================================================
 COMPILE TIME CHANGES					*compile-changes-9.2*
 
