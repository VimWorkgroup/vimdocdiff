diff --git a/runtime/doc/eval.txt b/runtime/doc/eval.txt
index 80ccce8f6..027cf08c5 100644
--- a/runtime/doc/eval.txt
+++ b/runtime/doc/eval.txt
@@ -1,4 +1,4 @@
-*eval.txt*	For Vim version 9.1.  Last change: 2024 Oct 22
+*eval.txt*	For Vim version 9.1.  Last change: 2024 Oct 28
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -2026,6 +2026,11 @@ v:cmdbang	Set like v:cmdarg for a file read/write command.  When a "!"
 		was used the value is 1, otherwise it is 0.  Note that this
 		can only be used in autocommands.  For user commands |<bang>|
 		can be used.
+
+					*v:cmdcomplete* *cmdcomplete-variable*
+v:cmdcomplete	When evaluating 'findexpr': if 'findexpr' is used for cmdline
+		completion the value is |v:true|, otherwise it is |v:false|.
+
 						*v:collate* *collate-variable*
 v:collate	The current locale setting for collation order of the runtime
 		environment.  This allows Vim scripts to be aware of the
diff --git a/runtime/doc/options.txt b/runtime/doc/options.txt
index 229ce13fd..e221fe3e2 100644
--- a/runtime/doc/options.txt
+++ b/runtime/doc/options.txt
@@ -1,4 +1,4 @@
-*options.txt*	For Vim version 9.1.  Last change: 2024 Oct 22
+*options.txt*	For Vim version 9.1.  Last change: 2024 Oct 28
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -3567,6 +3567,10 @@ A jump table for the options with a short description can be found at |Q_op|.
 	The expression is evaluated only once per |:find| command invocation.
 	The expression can process all the directories specified in 'path'.
 
+	The expression may be evaluated for command-line completion as well,
+	in which case the |v:cmdcomplete| variable will be set to |v:true|,
+	otherwise it will be set to |v:false|.
+
 	If a match is found, the expression should return a |List| containing
 	one or more file names.  If a match is not found, the expression
 	should return an empty List.
@@ -3586,7 +3590,8 @@ A jump table for the options with a short description can be found at |Q_op|.
 >
 	    " Use glob()
 	    func FindExprGlob()
-		return glob(v:fname, v:false, v:true)
+		let pat = v:cmdcomplete ? $'{v:fname}*' : v:fname
+		return glob(pat, v:false, v:true)
 	    endfunc
 	    set findexpr=FindExprGlob()
 
