diff --git a/runtime/doc/builtin.txt b/runtime/doc/builtin.txt
index c437f8da8..e1847b1d3 100644
--- a/runtime/doc/builtin.txt
+++ b/runtime/doc/builtin.txt
@@ -1,4 +1,4 @@
-*builtin.txt*	For Vim version 9.1.  Last change: 2025 Jul 11
+*builtin.txt*	For Vim version 9.1.  Last change: 2025 Jul 17
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -1268,7 +1268,7 @@ base64_encode({blob})					*base64_encode()*
 		    " Encode the contents of a binary file
 		    echo base64_encode(readblob('somefile.bin'))
 		    " Encode a string
-		    echo base64_encode(str2blob([somestr]))
+		    echo base64_encode(str2blob(somestr->split("\n")))
 <
 		Can also be used as a |method|: >
 			GetBinaryData()->base64_encode()
@@ -4333,6 +4333,7 @@ getcompletion({pat}, {type} [, {filtered}])		*getcompletion()*
 		messages	|:messages| suboptions
 		option		options
 		packadd		optional package |pack-add| names
+		retab		|:retab| suboptions
 		runtime		|:runtime| completion
 		scriptnames	sourced script names |:scriptnames|
 		shellcmd	Shell command
diff --git a/runtime/doc/change.txt b/runtime/doc/change.txt
index e958e038b..a09637370 100644
--- a/runtime/doc/change.txt
+++ b/runtime/doc/change.txt
@@ -1,4 +1,4 @@
-*change.txt*    For Vim version 9.1.  Last change: 2025 Jun 26
+*change.txt*    For Vim version 9.1.  Last change: 2025 Jul 15
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -991,22 +991,26 @@ This replaces each 'E' character with a euro sign.  Read more in |<Char->|.
 
 4.4 Changing tabs					*change-tabs*
 							*:ret* *:retab* *:retab!*
-:[range]ret[ab][!] [new_tabstop]
+:[range]ret[ab][!] [-indentonly] [{new-tabstop}]
 			Replace all sequences of white-space containing a
-			<Tab> with new strings of white-space using the new
-			tabstop value given.  If you do not specify a new
-			tabstop size or it is zero, Vim uses the current value
-			of 'tabstop'.
+			<Tab> with new strings of white-space using
+			{new-tabstop}.  If you do not specify {new-tabstop} or
+			it is zero, Vim uses the current value of 'tabstop'.
 			The current value of 'tabstop' is always used to
 			compute the width of existing tabs.
 			With !, Vim also replaces strings of only normal
 			spaces with tabs where appropriate.
 			With 'expandtab' on, Vim replaces all tabs with the
 			appropriate number of spaces.
-			This command sets 'tabstop' to the new value given,
-			and if performed on the whole file, which is default,
-			should not make any visible change.
-			Careful: This command modifies any <Tab> characters
+			This command sets 'tabstop' to {new-tabstop} and if
+			performed on the whole file, which is default, should
+			not make any visible change.
+
+			When [-indentonly] is specified, only the leading
+			white-space will be targeted.  Any other consecutive
+			white-space will not be changed.
+
+			Warning: This command modifies any <Tab> characters
 			inside of strings in a C program.  Use "\t" to avoid
 			this (that's a good habit anyway).
 			`:retab!` may also change a sequence of spaces by
diff --git a/runtime/doc/develop.txt b/runtime/doc/develop.txt
index 621e7f668..726a59778 100644
--- a/runtime/doc/develop.txt
+++ b/runtime/doc/develop.txt
@@ -1,4 +1,4 @@
-*develop.txt*   For Vim version 9.1.  Last change: 2025 May 05
+*develop.txt*   For Vim version 9.1.  Last change: 2025 Jul 18
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -237,6 +237,10 @@ you don't need to do anything due to the |modeline|.
 
 For other editors an `.editorconfig` is provided at the root of the repo.
 
+For the source files `sign.c` and `sound.c` and any new file use only spaces,
+no tabs. In addition, any new file must include a modeline with `set et` to
+pass the indentation test.
+
 
 DECLARATIONS						*style-declarations*
 
diff --git a/runtime/doc/diff.txt b/runtime/doc/diff.txt
index 493c740ad..97577fd7b 100644
--- a/runtime/doc/diff.txt
+++ b/runtime/doc/diff.txt
@@ -1,4 +1,4 @@
-*diff.txt*      For Vim version 9.1.  Last change: 2025 Jun 20
+*diff.txt*      For Vim version 9.1.  Last change: 2025 Jul 26
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -14,7 +14,8 @@ The basics are explained in section |08.7| of the user manual.
 2. Viewing diffs		|view-diffs|
 3. Jumping to diffs		|jumpto-diffs|
 4. Copying diffs		|copy-diffs|
-5. Diff options			|diff-options|
+5. Diff anchors			|diff-anchors|
+6. Diff options			|diff-options|
 
 ==============================================================================
 1. Starting diff mode					*start-vimdiff*
@@ -336,7 +337,129 @@ name or a part of a buffer name.  Examples:
 				diff mode (e.g., "file.c.v2")
 
 ==============================================================================
-5. Diff options						*diff-options*
+5. Diff anchors						*diff-anchors*
+
+Diff anchors allow you to control where the diff algorithm aligns and
+synchronize text across files.  Each anchor matches each other in each file,
+allowing you to control the output of a diff.
+
+This is useful when a change involves complicated edits.  For example, if a
+function was moved to another location and further edited.  By default, the
+algorithm aims to create the smallest diff, which results in that entire
+function being considered to be deleted and added on the other side, making it
+hard to see what the actual edit on it was.  You can use diff anchors to pin
+that function so the diff algorithm will align based on it.
+
+To use it, set anchors using 'diffanchors' which is a comma-separated list of
+{address} in each file, and then add "anchor" to 'diffopt'.  Internaly, Vim
+splits each file up into sections split by the anchors.  It performs the diff
+on each pair of sections separately before merging the results back.
+
+Setting 'diffanchors' will update the diff immediately.  If an anchor is tied
+to a mark, and you change what the mark is pointed to, you need to manually
+call |:diffupdate| afterwards to get the updated diff results.
+
+Example:
+
+Let's say we have the following files, side-by-side.  We are interested in the
+change that happened to the function `foo()`, which was both edited and moved.
+
+File A: >
+	int foo() {
+	    int n = 1;
+	    return n;
+	}
+
+	int g = 1;
+
+	int bar(int a) {
+	    a *= 2;
+	    a += 3;
+	    return a;
+	}
+<File B: >
+	int bar(int a) {
+	    a *= 2;
+	    a += 3;
+	    return a;
+	}
+
+	int foo() {
+	    int n = 999;
+	    return n;
+	}
+
+	int g = 1;
+<
+A normal diff will usually align the diff result as such: >
+
+	int foo() {     |----------------
+	    int n = 1;  |----------------
+	    return n;   |----------------
+	}               |----------------
+	                |----------------
+	int g = 1;      |----------------
+	                |----------------
+	int bar(int a) {|int bar(int a) {
+	    a *= 2;     |    a *= 2;
+	    a += 3;     |    a += 3;
+	    return a;   |    return a;
+	}               |}
+	----------------|
+	----------------|int foo() {
+	----------------|    int n = 999;
+	----------------|    return n;
+	----------------|}
+	----------------|
+	----------------|int g = 1;
+<
+What we want is to instead ask the diff to align on `foo()`: >
+
+	----------------|int bar(int a) {
+	----------------|    a *= 2;
+	----------------|    a += 3;
+	----------------|    return a;
+	----------------|}
+	----------------|
+	int foo() {     |int foo() {
+	    int n = 1;  |    int n = 999;
+	    return n;   |    return n;
+	}               |}
+	                |
+	int g = 1;      |int g = 1;
+	                |----------------
+	int bar(int a) {|----------------
+	    a *= 2;     |----------------
+	    a += 3;     |----------------
+	    return a;   |----------------
+	}               |----------------
+<
+
+Below are some ways of setting diff anchors to get the above result.  In each
+example, 'diffopt' needs to have `anchor` set for this to take effect.
+
+Marks: Set the |'a| mark on the `int foo()` lines in each file first before
+setting the anchors: >
+	set diffanchors='a
+
+Pattern: Specify the anchor using a |pattern| (see |:/|).  Here, we make sure
+to always start search from line 1 for consistency: >
+	set diffanchors=1/int\ foo(/
+<
+Selection: Use visual mode to select the entire `foo()` function body in each
+file.  Here, we use two anchors.  This does a better job of making sure only
+the function bodies are anchored against each other but not the lines after
+it.  Note the `'>+1` below.  The "+1" is necessary as we want the split to
+happen below the last line of the function, not above: >
+	set diffanchors='<,'>+1
+<
+Manually set two anchors using line numbers via buffer-local options: >
+	setlocal diffanchors=1,5
+	wincmd w
+	setlocal diffanchors=7,11
+<
+==============================================================================
+6. Diff options						*diff-options*
 
 Also see |'diffopt'| and the "diff" item of |'fillchars'|.
 
diff --git a/runtime/doc/eval.txt b/runtime/doc/eval.txt
index 6a576d31c..73cb70b96 100644
--- a/runtime/doc/eval.txt
+++ b/runtime/doc/eval.txt
@@ -1,4 +1,4 @@
-*eval.txt*	For Vim version 9.1.  Last change: 2025 Jun 28
+*eval.txt*	For Vim version 9.1.  Last change: 2025 Jul 13
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -5210,7 +5210,7 @@ The |:Launch| user command uses shell completion for its first argument.
 
 NOTE: escaping of <args> is left to the user
 
-Examples: >vim
+Examples: >
 	vim9script
 
 	import autoload 'dist/vim9.vim'
diff --git a/runtime/doc/fold.txt b/runtime/doc/fold.txt
index 961fa57c9..d138e0d93 100644
--- a/runtime/doc/fold.txt
+++ b/runtime/doc/fold.txt
@@ -1,4 +1,4 @@
-*fold.txt*      For Vim version 9.1.  Last change: 2025 Jul 09
+*fold.txt*      For Vim version 9.1.  Last change: 2025 Jul 15
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -164,7 +164,7 @@ level is found.
 If this proves difficult, the next best thing could be to cache all fold
 levels in a buffer-local variable (b:foldlevels) that is only updated on
 |b:changedtick|:
->vim
+>
   vim9script
   def MyFoldFunc(): number
     if b:lasttick == b:changedtick
@@ -651,7 +651,7 @@ all lines of the fold.
 This does not happen for |:folddoopen| and |:folddoclosed|.
 
 Note that for some Ex commands like |:source| the range is only adjusted when
-using a two-address [range].
+using a two line specifiers [range].
 
 When editing a buffer that has been edited before, the last used folding
 settings are used again.  For manual folding the defined folds are restored.
diff --git a/runtime/doc/index.txt b/runtime/doc/index.txt
index c9e80da9b..8ff3ae5fe 100644
--- a/runtime/doc/index.txt
+++ b/runtime/doc/index.txt
@@ -1,4 +1,4 @@
-*index.txt*     For Vim version 9.1.  Last change: 2025 Jun 28
+*index.txt*     For Vim version 9.1.  Last change: 2025 Jul 17
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -530,7 +530,7 @@ tag		command		   action in op-pending and Visual mode	~
 tag		command		   action in Normal mode	~
 ------------------------------------------------------------------------------
 |CTRL-W_CTRL-B|	CTRL-W CTRL-B	   same as "CTRL-W b"
-|CTRL-W_CTRL-C|	CTRL-W CTRL-C	   same as "CTRL-W c"
+|CTRL-W_CTRL-C|	CTRL-W CTRL-C	   no-op |CTRL-W_CTRL-C|
 |CTRL-W_CTRL-D|	CTRL-W CTRL-D	   same as "CTRL-W d"
 |CTRL-W_CTRL-F|	CTRL-W CTRL-F	   same as "CTRL-W f"
 		CTRL-W CTRL-G	   same as "CTRL-W g .."
diff --git a/runtime/doc/insert.txt b/runtime/doc/insert.txt
index df0cff978..80b604155 100644
--- a/runtime/doc/insert.txt
+++ b/runtime/doc/insert.txt
@@ -1,4 +1,4 @@
-*insert.txt*    For Vim version 9.1.  Last change: 2025 Jul 05
+*insert.txt*    For Vim version 9.1.  Last change: 2025 Jul 17
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -1258,13 +1258,16 @@ of values:
 Example: >
 	:set completepopup=height:10,width:60,highlight:InfoPopup
 
-When the "align" value is "item" then the popup is positioned close to the
-selected item.  Changing the selection will also move the popup.  When "align"
-is "menu" then the popup is aligned with the top of the menu if the menu is
-below the text, and the bottom of the menu otherwise.
+When `"align"` is set to `"item"`, the popup is positioned near the selected
+item, and moves as the selection changes.
+When set to `"menu"`, the popup aligns with the top of the menu (if the menu
+appears below the text), or with the bottom (if the menu appears above).
 
-After the info popup is created it can be found with |popup_findinfo()| and
-properties can be changed with |popup_setoptions()|.
+If the 'mouse' is enabled, a close button and resize handle will appear on the
+popup border.
+
+After creation, the info popup can be located with |popup_findinfo()| and
+modified using |popup_setoptions()|.
 
 						*complete-popuphidden*
 If the information for the popup is obtained asynchronously, use "popuphidden"
diff --git a/runtime/doc/map.txt b/runtime/doc/map.txt
index 899b24bac..5a904b05b 100644
--- a/runtime/doc/map.txt
+++ b/runtime/doc/map.txt
@@ -1,4 +1,4 @@
-*map.txt*       For Vim version 9.1.  Last change: 2024 Oct 08
+*map.txt*       For Vim version 9.1.  Last change: 2025 Jul 14
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -1654,6 +1654,7 @@ completion can be enabled:
 	-complete=messages	|:messages| suboptions
 	-complete=option	options
 	-complete=packadd	optional package |pack-add| names
+	-complete=retab		|:retab| suboptions
 	-complete=runtime	file and directory names in |'runtimepath'|
 	-complete=scriptnames	sourced script names
 	-complete=shellcmd	Shell command
diff --git a/runtime/doc/options.txt b/runtime/doc/options.txt
index 5c2904853..a624a9ac6 100644
--- a/runtime/doc/options.txt
+++ b/runtime/doc/options.txt
@@ -1,4 +1,4 @@
-*options.txt*	For Vim version 9.1.  Last change: 2025 Jul 10
+*options.txt*	For Vim version 9.1.  Last change: 2025 Jul 16
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -2986,6 +2986,28 @@ A jump table for the options with a short description can be found at |Q_op|.
 	Join the current window in the group of windows that shows differences
 	between files.  See |vimdiff|.
 
+					    *'dia'* *'diffanchors'* *E1549*
+'diffanchors' 'dia'	string	(default "")
+			global or local to buffer |global-local|
+	List of {address} in each buffer, separated by commas, that are
+	considered anchors when used for diffing.  It's valid to specify "$+1"
+	for 1 past the last line.  "%" cannot be used for this option.  There
+	can be at most 20 anchors set for each buffer.
+
+	Each anchor line splits the buffer (the split happens above the
+	anchor), with each part being diff'ed separately before the final
+	result is joined.  When more than one {address} are provided, the
+	anchors will be sorted interally by line number.  If using buffer
+	local options, each buffer should have the same number of anchors
+	(extra anchors will be ignored).  This option is only used when
+	'diffopt' has "anchor" set.  See |diff-anchors| for more details and
+	examples.
+								*E1550*
+	If some of the {address} do not resolve to a line in each buffer (e.g.
+	a pattern search that does not match anything), none of the anchors
+	will be used.
+
+
 						*'dex'* *'diffexpr'*
 'diffexpr' 'dex'	string	(default "")
 			global
@@ -3014,6 +3036,10 @@ A jump table for the options with a short description can be found at |Q_op|.
 				patience   patience diff algorithm
 				histogram  histogram diff algorithm
 
+		anchor		Anchor specific lines in each buffer to be
+				aligned with each other if 'diffanchors' is
+				set.  See |diff-anchors|.
+
 		closeoff	When a window is closed where 'diff' is set
 				and there is only one window remaining in the
 				same tab page with 'diff' set, execute
@@ -3116,6 +3142,7 @@ A jump table for the options with a short description can be found at |Q_op|.
 				"linematch:60", as this will enable alignment
 				for a 2 buffer diff hunk of 30 lines each,
 				or a 3 buffer diff hunk of 20 lines each.
+				Implicitly sets "filler" when this is set.
 
 		vertical	Start diff mode with vertical splits (unless
 				explicitly specified otherwise).
@@ -7727,8 +7754,7 @@ A jump table for the options with a short description can be found at |Q_op|.
 		:setlocal showbreak=NONE
 <
 				     *'showcmd'* *'sc'* *'noshowcmd'* *'nosc'*
-'showcmd' 'sc'		boolean	(Vim default: on, off for Unix,
-				       Vi default: off, set in |defaults.vim|)
+'showcmd' 'sc'		boolean	(Vim default: on, Vi default: off)
 			global
 	Show (partial) command in the last line of the screen.  Set this
 	option off if your terminal is slow.
diff --git a/runtime/doc/pi_tar.txt b/runtime/doc/pi_tar.txt
index 6d49928dc..52706e93e 100644
--- a/runtime/doc/pi_tar.txt
+++ b/runtime/doc/pi_tar.txt
@@ -1,11 +1,10 @@
-*pi_tar.txt*	For Vim version 9.1.  Last change: 2025 Mar 16
+*pi_tar.txt*	For Vim version 9.1.  Last change: 2025 Jul 15
 
 		       +====================+
 		       | Tar File Interface |
 		       +====================+
 
-Author:  Charles E. Campbell  <NcampObell@SdrPchip.AorgM-NOSPAM>
-	  (remove NOSPAM from Campbell's email first)
+Original Author:  Charles E. Campbell
 Copyright 2005-2017:					*tar-copyright*
 	The VIM LICENSE (see |copyright|) applies to the files in this
 	package, including tarPlugin.vim, tar.vim, and pi_tar.txt.  Like
@@ -61,7 +60,7 @@ Copyright 2005-2017:					*tar-copyright*
 	the file mentioned in the tarball.  If the current directory is not
 	correct for that path, :TarDiff will fail to find the associated file.
 
-	If the [filename] is given, that that filename (and path) will be used
+	If the [filename] is given, that filename (and path) will be used
 	to specify the associated file.
 
 
@@ -95,24 +94,25 @@ Copyright 2005-2017:					*tar-copyright*
    *g:tar_readoptions*	  "OPxf"  used to extract a file from a tarball
    *g:tar_cmd*		  "tar"   the name of the tar program
    *g:tar_nomax*	    0	  if true, file window will not be maximized
-   *g:tar_secure*	  undef   if exists:
-					"--"s will be used to prevent unwanted
-					option expansion in tar commands.
-					Please be sure that your tar command
-					accepts "--"; Posix compliant tar
-					utilities do accept them.
-				  if not exists:
-					The tar plugin will reject any tar
-					files or member files that begin with
-					"-"
-				  Not all tar's support the "--" which is why
-				  it isn't default.
    *g:tar_writeoptions*	  "uf"    used to update/replace a file
 
 
 ==============================================================================
 4. History						*tar-history*
 
+	unreleased:
+		Jul 13, 2025	* drop leading /
+		May 19, 2025	* restore working directory after read/write
+		Apr 16, 2025	* decouple from netrw by adding s:WinPath()
+				instead of shelling out to file(1)
+		Mar 02, 2025	* determine the compression using readblob()
+		Mar 02, 2025	* escape the filename before using :read
+		Mar 01, 2025	* fix syntax error in tar#Read()
+		Feb 28, 2025	* add support for bzip3 (#16755)
+		Feb 06, 2025	* add support for lz4 (#16591)
+		Nov 11, 2024	* support permissions (#7379)
+		Feb 19, 2024	* announce adoption
+		Jan 08, 2024	* fix a few problems (#138331, #12637, #8109)
 	v31	Apr 02, 2017	* (klartext) reported that browsing encrypted
 				  files in a zip archive created unencrypted
 				  swap files.  I am applying a similar fix
diff --git a/runtime/doc/pi_zip.txt b/runtime/doc/pi_zip.txt
index afc2d0eeb..0f7ef4ec3 100644
--- a/runtime/doc/pi_zip.txt
+++ b/runtime/doc/pi_zip.txt
@@ -1,4 +1,4 @@
-*pi_zip.txt*	For Vim version 9.1.  Last change: 2025 Apr 02
+*pi_zip.txt*	For Vim version 9.1.  Last change: 2025 Jul 15
 
 				+====================+
 				| Zip File Interface |
@@ -111,6 +111,18 @@ Copyright: Copyright (C) 2005-2015 Charles E Campbell	 *zip-copyright*
 
 ==============================================================================
 4. History							*zip-history* {{{1
+   unreleased:
+       Jul 12, 2025 * drop ../ on write to prevent path traversal attacks
+       Mar 11, 2025 * handle filenames with leading '-' correctly
+       Aug 21, 2024 * simplify condition to detect MS-Windows
+       Aug 18, 2024 * correctly handle special globbing chars
+       Aug 05, 2024 * clean-up and make it work with shellslash on Windows
+       Aug 05, 2024 * workaround for the FreeBSD's unzip
+       Aug 04, 2024 * escape '[' in name of file to be extracted
+       Jul 30, 2024 * fix opening remote zipfile
+       Jul 24, 2024 * use delete() function
+       Jul 23, 2024 * fix 'x' command
+       Jun 16, 2024 * handle whitespace on Windows properly (#14998)
    v33 Dec 07, 2021 * *.xlam mentioned twice in zipPlugin
    v32 Oct 22, 2021 * to avoid an issue with a vim 8.2 patch, zipfile: has
 		      been changed to zipfile:// . This often shows up
diff --git a/runtime/doc/quickref.txt b/runtime/doc/quickref.txt
index a5d25b0de..bc308987f 100644
--- a/runtime/doc/quickref.txt
+++ b/runtime/doc/quickref.txt
@@ -1,4 +1,4 @@
-*quickref.txt*  For Vim version 9.1.  Last change: 2025 Jun 28
+*quickref.txt*  For Vim version 9.1.  Last change: 2025 Jul 16
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -682,6 +682,7 @@ Short explanation of each option:		*option-list*
 'delcombine'	  'deco'    delete combining characters on their own
 'dictionary'	  'dict'    list of file names used for keyword completion
 'diff'			    use diff mode for the current window
+'diffanchors'	  'dia'     list of {address} to force anchoring of a diff
 'diffexpr'	  'dex'     expression used to obtain a diff file
 'diffopt'	  'dip'     options for using diff mode
 'digraph'	  'dg'	    enable the entering of digraphs in Insert mode
diff --git a/runtime/doc/repeat.txt b/runtime/doc/repeat.txt
index bf260dc48..b0724d708 100644
--- a/runtime/doc/repeat.txt
+++ b/runtime/doc/repeat.txt
@@ -1,4 +1,4 @@
-*repeat.txt*    For Vim version 9.1.  Last change: 2025 Jul 09
+*repeat.txt*    For Vim version 9.1.  Last change: 2025 Jul 15
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -237,7 +237,7 @@ For writing a Vim script, see chapter 41 of the user manual |usr_41.txt|.
 <			Implementation detail: When sourcing a [range] of
 			lines that falls inside a folded region, the range
 			will be adjusted to the start and end of the fold,
-			but only if a two-address range was used.
+			but only if a two line specifiers range was used.
 
 							*:source!*
 :so[urce]! {file}	Read Vim commands from {file}.  These are commands
diff --git a/runtime/doc/syntax.txt b/runtime/doc/syntax.txt
index 44fed277f..b1f644e5b 100644
--- a/runtime/doc/syntax.txt
+++ b/runtime/doc/syntax.txt
@@ -1,4 +1,4 @@
-*syntax.txt*	For Vim version 9.1.  Last change: 2025 Jun 03
+*syntax.txt*	For Vim version 9.1.  Last change: 2025 Jul 14
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -1573,15 +1573,47 @@ ERLANG						*erlang.vim* *ft-erlang-syntax*
 Erlang is a functional programming language developed by Ericsson.  Files with
 the following extensions are recognized as Erlang files: erl, hrl, yaws.
 
-The BIFs (built-in functions) are highlighted by default. To disable this,
-put the following line in your vimrc: >
+Vim highlights triple-quoted docstrings as comments by default.
 
-      :let g:erlang_highlight_bifs = 0
+If you want triple-quoted docstrings highlighted as Markdown, add the
+following line to your |.vimrc|: >
 
-To enable highlighting some special atoms, put this in your vimrc: >
+	:let g:erlang_use_markdown_for_docs = 1
 
-      :let g:erlang_highlight_special_atoms = 1
+The plain text inside the docstrings (that is, the characters that are not
+highlighted by the Markdown syntax) is still highlighted as a comment.
 
+If you want to highlight the plain text inside the docstrings using a
+different highlight group, add the following line to your |.vimrc| (the
+example highlights plain text using the String highlight group): >
+
+	:let g:erlang_docstring_default_highlight = 'String'
+
+If you don't enable Markdown, this line highlights the full docstrings
+according to the specified highlight group.
+
+Use the following line to disable highlighting for the plain text: >
+
+	:let g:erlang_docstring_default_highlight = ''
+
+Configuration examples: >
+
+	" Highlight docstrings as Markdown.
+	:let g:erlang_use_markdown_for_docs = 1
+
+	" 1. Highlight Markdown elements in docstrings as Markdown.
+	" 2. Highlight the plain text in docstrings as String.
+	:let g:erlang_use_markdown_for_docs = 1
+	:let g:erlang_docstring_default_highlight = 'String'
+
+	" Highlight docstrings as strings (no Markdown).
+	:let g:erlang_docstring_default_highlight = 'String'
+
+	" 1. Highlight Markdown elements in docstrings as Markdown.
+	" 2. Don't highlight the plain text in docstrings.
+	:let g:erlang_use_markdown_for_docs = 1
+	:let g:erlang_docstring_default_highlight = ''
+<
 
 ELIXIR						*elixir.vim* *ft-elixir-syntax*
 
diff --git a/runtime/doc/tabpage.txt b/runtime/doc/tabpage.txt
index 4b0b591b4..4f46ddd0a 100644
--- a/runtime/doc/tabpage.txt
+++ b/runtime/doc/tabpage.txt
@@ -1,4 +1,4 @@
-*tabpage.txt*   For Vim version 9.1.  Last change: 2025 Jul 01
+*tabpage.txt*   For Vim version 9.1.  Last change: 2025 Jul 17
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -363,6 +363,9 @@ A "+" will be shown for a tab page that has a modified window.  The number of
 windows in a tabpage is also shown.  Thus "3+" means three windows and one of
 them has a modified buffer.
 
+An "X" (close button) will appear in the last column when multiple tabs are
+open, but only if the 'mouse' is enabled.
+
 The 'tabline' option allows you to define your preferred way to tab pages
 labels.  This isn't easy, thus an example will be given here.
 
diff --git a/runtime/doc/usr_25.txt b/runtime/doc/usr_25.txt
index ed92c9535..c33450a67 100644
--- a/runtime/doc/usr_25.txt
+++ b/runtime/doc/usr_25.txt
@@ -1,4 +1,4 @@
-*usr_25.txt*	For Vim version 9.1.  Last change: 2025 Jun 10
+*usr_25.txt*	For Vim version 9.1.  Last change: 2025 Jun 13
 
 		     VIM USER MANUAL - by Bram Moolenaar
 
@@ -200,7 +200,7 @@ command: >vim
 
 Or put this line in your |vimrc|: >vim
 
-	packadd! justify
+	:packadd! justify
 
 This Vim script file defines a new visual command "_j".  To justify a block of
 text, highlight the text in Visual mode and then execute "_j".
diff --git a/runtime/doc/version9.txt b/runtime/doc/version9.txt
index a89ab4f1e..1dd1576ac 100644
--- a/runtime/doc/version9.txt
+++ b/runtime/doc/version9.txt
@@ -1,4 +1,4 @@
-*version9.txt*  For Vim version 9.1.  Last change: 2025 Jul 10
+*version9.txt*  For Vim version 9.1.  Last change: 2025 Jul 16
 
 
 		  VIM REFERENCE MANUAL    by Bram Moolenaar
@@ -41570,6 +41570,12 @@ the "inline" sub option value for the 'diffopt' setting, with "inline:simple"
 being added to the default "diffopt" value (but this does not change how diff
 mode works).
 
+The 'diffanchors' option specifies a comma-separated list of addresses in
+a buffer that act as anchor points for splitting and independently diffing
+buffer sections, improving diff alignment.  It is only used when 'diffopt'
+includes "anchor" and all specified addresses must resolve in every buffer, or
+else the anchors are ignored.
+
 Completion~
 ----------
 - New Insert-mode completion: |i_CTRL-X_CTRL-R| to complete words from
@@ -41648,6 +41654,9 @@ Default values: ~
 - the default value of the 'keyprotocol' option has been updated and support
   for the ghostty terminal emulator (using kitty protocol) has been added
 - Improved visual highlighting |hl-Visual|
+- the default value for 'showcmd' is always enabled when using non-compatible
+  mode (previously, it was off on UNIX systems) and consequently removed from
+  |defaults.vim|
 
 Completion: ~
 - allow to complete directories from 'cdpath' for |:cd| and similar commands,
@@ -41692,6 +41701,8 @@ Ex commands: ~
   documented and skips help buffers (if not run from a help buffer, else
   moves to the next/previous help buffer).
 - |:keeppatterns| preserves the last substitute pattern when used with |:s|
+- |:retab| accepts the new optional parameter -indentonly to only change
+  whitespace in indented lines.
 
 Functions: ~
 - provide information about function arguments using the get(func, "arity")
@@ -41715,6 +41726,8 @@ Others: ~
 - the configure script will favor using GTK3 over GTK2 when auto-detecting the
   gui toolkit
 - |gv| works in operator pending mode and does not abort
+- The close button shown in the non-GUI 'tabline' will only be visible if the
+  'mouse' option contains either "a" or any of the flags "n", "v", or "i".
 
 							*added-9.2*
 Added ~
@@ -41794,6 +41807,7 @@ Options: ~
 			|ins-completion| modes
 'completeitemalign'	Order of |complete-items| in Insert mode completion
 			popup
+'diffanchors'		list of {address} to force syncing of diffs
 'eventignorewin'	autocommand events that are ignored in a window
 'findfunc'		Vim function to obtain the results for a |:find|
 			command
