diff --git a/runtime/doc/builtin.txt b/runtime/doc/builtin.txt
index 8f2d132e2..862a1dfc6 100644
--- a/runtime/doc/builtin.txt
+++ b/runtime/doc/builtin.txt
@@ -1,4 +1,4 @@
-*builtin.txt*	For Vim version 9.1.  Last change: 2024 Jun 12
+*builtin.txt*	For Vim version 9.1.  Last change: 2024 Jun 13
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -1729,6 +1729,8 @@ col({expr} [, {winid}])					*col()*
 		The result is a Number, which is the byte index of the column
 		position given with {expr}.
 		For accepted positions see |getpos()|.
+		When {expr} is "$", it means the end of the cursor line, so
+		the result is the number of bytes in the cursor line plus one.
 		Additionally {expr} can be [lnum, col]: a |List| with the line
 		and column number. Most useful when the column is "$", to get
 		the last column of a specific line.  When "lnum" or "col" is
@@ -4492,7 +4494,7 @@ getpos({expr})							*getpos()*
 		    .	    The cursor position.
 		    $	    The last line in the current buffer.
 		    'x	    Position of mark x (if the mark is not set, 0 is
-			    returned).
+			    returned for all values).
 		    w0	    First line visible in current window (one if the
 			    display isn't updated, e.g. in silent Ex mode).
 		    w$	    Last line visible in current window (this is one
@@ -4542,8 +4544,8 @@ getpos({expr})							*getpos()*
 			let save_a_mark = getpos("'a")
 			...
 			call setpos("'a", save_a_mark)
-
-<		Also see |getcharpos()|, |getcurpos()| and |setpos()|.
+<
+		Also see |getcharpos()|, |getcurpos()| and |setpos()|.
 
 		Can also be used as a |method|: >
 			GetMark()->getpos()
@@ -7327,17 +7329,14 @@ mkdir({name} [, {flags} [, {prot}]])			*mkdir()* *E739*
 		When {flags} is present it must be a string.  An empty string
 		has no effect.
 
-		If {flags} contains "p" then intermediate directories are
-		created as necessary.
+		{flags} can contain these character flags:
+		 "p"	intermediate directories will be created as necessary
+		 "D"	{name} will be deleted at the end of the current
+			function, but not recursively |defer|
+		 "R"	{name} will be deleted recursively at the end of the
+			current function |defer|
 
-		If {flags} contains "D" then {name} is deleted at the end of
-		the current function, as with: >
-			defer delete({name}, 'd')
-<
-		If {flags} contains "R" then {name} is deleted recursively at
-		the end of the current function, as with: >
-			defer delete({name}, 'rf')
-<		Note that when {name} has more than one part and "p" is used
+		Note that when {name} has more than one part and "p" is used
 		some directories may already exist.  Only the first one that
 		is created and what it contains is scheduled to be deleted.
 		E.g. when using: >
@@ -11754,6 +11753,8 @@ virtcol({expr} [, {list} [, {winid}]])			*virtcol()*
 		For the byte position use |col()|.
 
 		For the use of {expr} see |getpos()| and |col()|.
+		When {expr} is "$", it means the end of the cursor line, so
+		the result is the number of cells in the cursor line plus one.
 
 		When 'virtualedit' is used {expr} can be [lnum, col, off],
 		where "off" is the offset in screen columns from the start of
diff --git a/runtime/doc/channel.txt b/runtime/doc/channel.txt
index 1d9dd5bd8..f29467955 100644
--- a/runtime/doc/channel.txt
+++ b/runtime/doc/channel.txt
@@ -1,4 +1,4 @@
-*channel.txt*      For Vim version 9.1.  Last change: 2024 Jun 06
+*channel.txt*      For Vim version 9.1.  Last change: 2024 Jun 13
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -956,7 +956,7 @@ job_info([{job}])					*job_info()*
 		Can also be used as a |method|: >
 			GetJob()->job_info()
 <
-		Return type: dict<any> or list<any> depending on whether {job}
+		Return type: dict<any> or list<job> depending on whether {job}
 		was given
 
 
@@ -1031,7 +1031,7 @@ job_start({command} [, {options}])			*job_start()*
 		Can also be used as a |method|: >
 			BuildCommand()->job_start()
 <
-		Return type: |Number|
+		Return type: |job|
 
 
 job_status({job})					*job_status()* *E916*
@@ -1056,7 +1056,7 @@ job_status({job})					*job_status()* *E916*
 		Can also be used as a |method|: >
 			GetJob()->job_status()
 <
-		Return type: |job|
+		Return type: |String|
 
 
 job_stop({job} [, {how}])					*job_stop()*
diff --git a/runtime/doc/syntax.txt b/runtime/doc/syntax.txt
index eb1dd7856..7ec47bd83 100644
--- a/runtime/doc/syntax.txt
+++ b/runtime/doc/syntax.txt
@@ -1,4 +1,4 @@
-*syntax.txt*	For Vim version 9.1.  Last change: 2024 Jun 11
+*syntax.txt*	For Vim version 9.1.  Last change: 2024 Jun 13
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -5688,7 +5688,6 @@ PmenuThumb	Popup menu: Thumb of the scrollbar.
 PmenuMatch	Popup menu: Matched text in normal item
 							*hl-PmenuMatchSel*
 PmenuMatchSel	Popup menu: Matched text in selected item
-
 							*hl-PopupNotification*
 PopupNotification
 		Popup window created with |popup_notification()|.  If not
diff --git a/runtime/doc/terminal.txt b/runtime/doc/terminal.txt
index 0f0b42a64..f509ea979 100644
--- a/runtime/doc/terminal.txt
+++ b/runtime/doc/terminal.txt
@@ -1,4 +1,4 @@
-*terminal.txt*	For Vim version 9.1.  Last change: 2024 Jun 08
+*terminal.txt*	For Vim version 9.1.  Last change: 2024 Jun 13
 
 
 		  VIM REFERENCE MANUAL	  by Bram Moolenaar
@@ -647,7 +647,8 @@ term_getcursor({buf})					*term_getcursor()*
 term_getjob({buf})					*term_getjob()*
 		Get the Job associated with terminal window {buf}.
 		{buf} is used as with |term_getsize()|.
-		Returns |v:null| when there is no job.
+		Returns |v:null| when there is no job. In Vim9 script, return
+		null_job when there is no job.
 
 		Can also be used as a |method|: >
 			GetBufnr()->term_getjob()
